[20250110 15:54:46:779][INFO ][com.example.demo.DemoApplication] Starting DemoApplication using Java 17.0.3 with PID 8692 (C:\Users\user\Desktop\demo\build\classes\java\main started by √÷¡¯«ı in C:\Users\user\Desktop\demo)
[20250110 15:54:46:850][INFO ][com.example.demo.DemoApplication] No active profile set, falling back to 1 default profile: "default"
[20250110 15:54:47:156][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[20250110 15:54:47:184][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[20250110 15:54:52:360][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 15:54:52:380][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[20250110 15:54:53:075][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 666 ms. Found 5 JPA repository interfaces.
[20250110 15:54:53:160][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 15:54:53:165][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[20250110 15:54:53:227][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 15:54:53:227][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 15:54:53:227][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.TossPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 15:54:53:227][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 15:54:53:227][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.WebPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 15:54:53:243][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 35 ms. Found 0 Redis repository interfaces.
[20250110 15:54:56:608][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8083 (http)
[20250110 15:54:56:707][INFO ][o.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8083"]
[20250110 15:54:56:725][INFO ][o.apache.catalina.core.StandardService] Starting service [Tomcat]
[20250110 15:54:56:725][INFO ][org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.31]
[20250110 15:54:57:196][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[20250110 15:54:57:251][INFO ][o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 10005 ms
[20250110 15:54:58:440][INFO ][o.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [name: default]
[20250110 15:54:59:206][INFO ][org.hibernate.Version] HHH000412: Hibernate ORM core version 6.5.3.Final
[20250110 15:54:59:452][INFO ][o.h.c.internal.RegionFactoryInitiator] HHH000026: Second-level cache disabled
[20250110 15:55:01:507][INFO ][o.s.o.j.p.SpringPersistenceUnitInfo] No LoadTimeWeaver setup: ignoring JPA class transformer
[20250110 15:55:02:082][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[20250110 15:55:05:049][INFO ][com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@31d119e7
[20250110 15:55:05:066][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[20250110 15:55:05:414][WARN ][org.hibernate.orm.deprecation] HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[20250110 15:55:05:770][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a53f534) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71467eb)
[20250110 15:55:05:773][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4be30e44) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5598adf5)
[20250110 15:55:05:776][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b71827) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@24380ce5)
[20250110 15:55:05:794][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@777aa708) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@679d5b17)
[20250110 15:55:05:807][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5f5301e3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b6861c8)
[20250110 15:55:05:920][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1988d34a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1440768f)
[20250110 15:55:05:951][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@535b21fd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2bc57c7f)
[20250110 15:55:05:974][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7488e8ce) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@63eb1cde)
[20250110 15:55:05:997][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@69b59d97) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6993225a)
[20250110 15:55:13:788][INFO ][o.h.e.t.j.p.i.JtaPlatformInitiator] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[20250110 15:55:14:421][INFO ][o.s.o.j.LocalContainerEntityManagerFactoryBean] Initialized JPA EntityManagerFactory for persistence unit 'default'
[20250110 15:55:20:116][WARN ][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[20250110 15:55:20:342][INFO ][o.s.b.a.w.s.WelcomePageHandlerMapping] Adding welcome page template: index
[20250110 15:55:24:893][INFO ][o.s.b.d.a.OptionalLiveReloadServer] LiveReload server is running on port 35729
[20250110 15:55:25:269][INFO ][o.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8083"]
[20250110 15:55:28:141][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat started on port 8083 (http) with context path '/'
[20250110 15:55:28:344][INFO ][com.example.demo.DemoApplication] Started DemoApplication in 45.347 seconds (process running for 51.034)
[20250110 15:56:55:906][INFO ][com.example.demo.DemoApplication] Starting DemoApplication using Java 17.0.3 with PID 6732 (C:\Users\user\Desktop\demo\build\classes\java\main started by √÷¡¯«ı in C:\Users\user\Desktop\demo)
[20250110 15:56:55:915][INFO ][com.example.demo.DemoApplication] No active profile set, falling back to 1 default profile: "default"
[20250110 15:56:56:117][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[20250110 15:56:56:120][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[20250110 15:56:59:548][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 15:56:59:553][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[20250110 15:57:00:015][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 434 ms. Found 5 JPA repository interfaces.
[20250110 15:57:00:091][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 15:57:00:096][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[20250110 15:57:00:152][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 15:57:00:155][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 15:57:00:157][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.TossPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 15:57:00:160][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 15:57:00:163][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.WebPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 15:57:00:166][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 36 ms. Found 0 Redis repository interfaces.
[20250110 15:57:02:117][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8083 (http)
[20250110 15:57:02:143][INFO ][o.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8083"]
[20250110 15:57:02:158][INFO ][o.apache.catalina.core.StandardService] Starting service [Tomcat]
[20250110 15:57:02:160][INFO ][org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.31]
[20250110 15:57:02:358][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[20250110 15:57:02:360][INFO ][o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 6237 ms
[20250110 15:57:03:003][INFO ][o.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [name: default]
[20250110 15:57:03:203][INFO ][org.hibernate.Version] HHH000412: Hibernate ORM core version 6.5.3.Final
[20250110 15:57:03:333][INFO ][o.h.c.internal.RegionFactoryInitiator] HHH000026: Second-level cache disabled
[20250110 15:57:04:079][INFO ][o.s.o.j.p.SpringPersistenceUnitInfo] No LoadTimeWeaver setup: ignoring JPA class transformer
[20250110 15:57:04:166][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[20250110 15:57:04:958][INFO ][com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@385e7848
[20250110 15:57:04:965][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[20250110 15:57:05:116][WARN ][org.hibernate.orm.deprecation] HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[20250110 15:57:05:171][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@41437f5b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d354082)
[20250110 15:57:05:173][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4075dddc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32257cb6)
[20250110 15:57:05:177][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@68c6640e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2fb008c4)
[20250110 15:57:05:184][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41c5abd3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@581cbf91)
[20250110 15:57:05:186][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a15688) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2cf89810)
[20250110 15:57:05:188][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@408f356f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d52fad8)
[20250110 15:57:05:189][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74cee6ec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c1ec87d)
[20250110 15:57:05:190][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2583b2dc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f6d088e)
[20250110 15:57:05:193][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4c977e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@26a00ac6)
[20250110 15:57:08:195][INFO ][o.h.e.t.j.p.i.JtaPlatformInitiator] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[20250110 15:57:08:564][INFO ][o.s.o.j.LocalContainerEntityManagerFactoryBean] Initialized JPA EntityManagerFactory for persistence unit 'default'
[20250110 15:57:11:057][WARN ][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[20250110 15:57:11:151][INFO ][o.s.b.a.w.s.WelcomePageHandlerMapping] Adding welcome page template: index
[20250110 15:57:12:301][INFO ][o.s.b.d.a.OptionalLiveReloadServer] LiveReload server is running on port 35729
[20250110 15:57:12:342][INFO ][o.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8083"]
[20250110 15:57:12:442][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat started on port 8083 (http) with context path '/'
[20250110 15:57:12:459][INFO ][com.example.demo.DemoApplication] Started DemoApplication in 19.347 seconds (process running for 21.856)
[20250110 15:58:05:212][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[20250110 15:58:05:212][INFO ][o.s.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[20250110 15:58:05:212][INFO ][o.s.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[20250110 15:58:06:433][WARN ][o.a.catalina.util.SessionIdGeneratorBase] Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [497] milliseconds.
[20250110 15:58:06:518][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 15:58:24:226][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 15:58:24:379][INFO ][com.example.demo.service.UserService] ∑Œ±◊¿Œ √≥∏Æ Ω√∞£ (DB ¡∂»∏ »ƒ Redis ¿˙¿Â): 999 ms
[20250110 15:58:25:959][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 15:58:25:971][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 15:58:26:057][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 15:58:26:057][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 15:58:26:074][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:12:06:717][INFO ][com.example.demo.DemoApplication] Starting DemoApplication using Java 17.0.3 with PID 18308 (C:\Users\user\Desktop\demo\build\classes\java\main started by √÷¡¯«ı in C:\Users\user\Desktop\demo)
[20250110 16:12:06:727][INFO ][com.example.demo.DemoApplication] No active profile set, falling back to 1 default profile: "default"
[20250110 16:12:06:968][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[20250110 16:12:06:970][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[20250110 16:12:10:995][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 16:12:11:019][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[20250110 16:12:12:013][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 910 ms. Found 5 JPA repository interfaces.
[20250110 16:12:12:083][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 16:12:12:088][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[20250110 16:12:12:159][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:12:12:163][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:12:12:165][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.TossPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:12:12:178][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:12:12:185][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.WebPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:12:12:199][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 60 ms. Found 0 Redis repository interfaces.
[20250110 16:12:16:446][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8083 (http)
[20250110 16:12:16:481][INFO ][o.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8083"]
[20250110 16:12:16:514][INFO ][o.apache.catalina.core.StandardService] Starting service [Tomcat]
[20250110 16:12:16:517][INFO ][org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.31]
[20250110 16:12:16:893][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[20250110 16:12:16:905][INFO ][o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 9933 ms
[20250110 16:12:17:690][INFO ][o.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [name: default]
[20250110 16:12:18:058][INFO ][org.hibernate.Version] HHH000412: Hibernate ORM core version 6.5.3.Final
[20250110 16:12:18:219][INFO ][o.h.c.internal.RegionFactoryInitiator] HHH000026: Second-level cache disabled
[20250110 16:12:19:796][INFO ][o.s.o.j.p.SpringPersistenceUnitInfo] No LoadTimeWeaver setup: ignoring JPA class transformer
[20250110 16:12:19:975][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[20250110 16:12:21:377][INFO ][com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@55a1556e
[20250110 16:12:21:489][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[20250110 16:12:21:982][WARN ][org.hibernate.orm.deprecation] HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[20250110 16:12:22:222][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@24380ce5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@777aa708)
[20250110 16:12:22:316][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@679d5b17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5f5301e3)
[20250110 16:12:22:392][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3b6861c8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1988d34a)
[20250110 16:12:22:400][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1440768f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@535b21fd)
[20250110 16:12:22:410][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2bc57c7f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7488e8ce)
[20250110 16:12:22:417][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@63eb1cde) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@69b59d97)
[20250110 16:12:22:427][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6993225a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5a6e693e)
[20250110 16:12:22:432][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61d89341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@24c4e3c8)
[20250110 16:12:22:497][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@543594f8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7dbb20d9)
[20250110 16:12:27:020][INFO ][o.h.e.t.j.p.i.JtaPlatformInitiator] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[20250110 16:12:27:489][INFO ][o.s.o.j.LocalContainerEntityManagerFactoryBean] Initialized JPA EntityManagerFactory for persistence unit 'default'
[20250110 16:12:31:843][WARN ][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[20250110 16:12:32:217][INFO ][o.s.b.a.w.s.WelcomePageHandlerMapping] Adding welcome page template: index
[20250110 16:12:34:790][INFO ][o.s.b.d.a.OptionalLiveReloadServer] LiveReload server is running on port 35729
[20250110 16:12:34:921][INFO ][o.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8083"]
[20250110 16:12:35:151][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat started on port 8083 (http) with context path '/'
[20250110 16:12:35:260][INFO ][com.example.demo.DemoApplication] Started DemoApplication in 32.343 seconds (process running for 35.196)
[20250110 16:15:37:637][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[20250110 16:15:37:706][INFO ][o.s.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[20250110 16:15:37:905][INFO ][o.s.web.servlet.DispatcherServlet] Completed initialization in 199 ms
[20250110 16:15:39:069][WARN ][o.a.catalina.util.SessionIdGeneratorBase] Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [239] milliseconds.
[20250110 16:15:39:580][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 16:15:42:147][INFO ][com.example.demo.service.UserService] Redisø°º≠ ∑Œ±◊¿Œ √≥∏Æ
[20250110 16:15:42:163][INFO ][com.example.demo.service.UserService] ∑Œ±◊¿Œ √≥∏Æ Ω√∞£ (Redis ªÁøÎ): 896 ms
[20250110 16:15:43:400][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 16:15:43:695][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 16:15:43:732][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 16:15:43:961][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:15:43:963][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:24:25:490][INFO ][com.example.demo.DemoApplication] Starting DemoApplication using Java 17.0.3 with PID 19128 (C:\Users\user\Desktop\demo\build\classes\java\main started by √÷¡¯«ı in C:\Users\user\Desktop\demo)
[20250110 16:24:25:500][INFO ][com.example.demo.DemoApplication] No active profile set, falling back to 1 default profile: "default"
[20250110 16:24:25:789][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[20250110 16:24:25:912][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[20250110 16:24:28:882][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 16:24:28:891][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[20250110 16:24:29:370][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 438 ms. Found 5 JPA repository interfaces.
[20250110 16:24:29:420][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 16:24:29:425][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[20250110 16:24:29:468][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:24:29:470][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:24:29:474][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.TossPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:24:29:477][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:24:29:479][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.WebPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:24:29:481][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 29 ms. Found 0 Redis repository interfaces.
[20250110 16:24:31:510][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8083 (http)
[20250110 16:24:31:537][INFO ][o.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8083"]
[20250110 16:24:31:551][INFO ][o.apache.catalina.core.StandardService] Starting service [Tomcat]
[20250110 16:24:31:552][INFO ][org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.31]
[20250110 16:24:31:742][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[20250110 16:24:31:743][INFO ][o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 5773 ms
[20250110 16:24:32:166][INFO ][o.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [name: default]
[20250110 16:24:32:400][INFO ][org.hibernate.Version] HHH000412: Hibernate ORM core version 6.5.3.Final
[20250110 16:24:32:505][INFO ][o.h.c.internal.RegionFactoryInitiator] HHH000026: Second-level cache disabled
[20250110 16:24:33:489][INFO ][o.s.o.j.p.SpringPersistenceUnitInfo] No LoadTimeWeaver setup: ignoring JPA class transformer
[20250110 16:24:33:576][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[20250110 16:24:34:334][INFO ][com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@80a9341
[20250110 16:24:34:346][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[20250110 16:24:34:542][WARN ][org.hibernate.orm.deprecation] HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[20250110 16:24:34:612][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1785ef9b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b48486e)
[20250110 16:24:34:615][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1bc96b17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c140210)
[20250110 16:24:34:617][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14d5d93e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1dd7f8f2)
[20250110 16:24:34:618][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4d16a98c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@411e36bc)
[20250110 16:24:34:620][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b381b88) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@590a7c75)
[20250110 16:24:34:624][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2128f411) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@11b39d5e)
[20250110 16:24:34:627][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2a6c30bb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@200f1857)
[20250110 16:24:34:629][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4661e83b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4b35c4c4)
[20250110 16:24:34:631][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@17dcf1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5882b104)
[20250110 16:24:37:217][INFO ][o.h.e.t.j.p.i.JtaPlatformInitiator] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[20250110 16:24:37:525][INFO ][o.s.o.j.LocalContainerEntityManagerFactoryBean] Initialized JPA EntityManagerFactory for persistence unit 'default'
[20250110 16:24:39:242][WARN ][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[20250110 16:24:39:475][INFO ][o.s.b.a.w.s.WelcomePageHandlerMapping] Adding welcome page template: index
[20250110 16:24:40:600][INFO ][o.s.b.d.a.OptionalLiveReloadServer] LiveReload server is running on port 35729
[20250110 16:24:40:655][INFO ][o.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8083"]
[20250110 16:24:40:732][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat started on port 8083 (http) with context path '/'
[20250110 16:24:40:754][INFO ][com.example.demo.DemoApplication] Started DemoApplication in 17.701 seconds (process running for 19.919)
[20250110 16:27:50:856][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[20250110 16:27:50:900][INFO ][o.s.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[20250110 16:27:50:949][INFO ][o.s.web.servlet.DispatcherServlet] Completed initialization in 27 ms
[20250110 16:27:52:932][WARN ][o.a.catalina.util.SessionIdGeneratorBase] Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [249] milliseconds.
[20250110 16:27:53:033][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 16:27:55:448][INFO ][com.example.demo.service.UserService] Redisø°º≠ ∑Œ±◊¿Œ √≥∏Æ
[20250110 16:27:55:448][INFO ][com.example.demo.service.UserService] ∑Œ±◊¿Œ √≥∏Æ Ω√∞£ (Redis ªÁøÎ): 799 ms
[20250110 16:27:56:381][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 16:27:56:594][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 16:27:56:608][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 16:27:56:661][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:27:56:661][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:27:57:477][WARN ][o.s.w.s.m.s.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'signupId' for method parameter type String is not present]
[20250110 16:38:35:890][INFO ][com.example.demo.DemoApplication] Starting DemoApplication using Java 17.0.3 with PID 1544 (C:\Users\user\Desktop\demo\build\classes\java\main started by √÷¡¯«ı in C:\Users\user\Desktop\demo)
[20250110 16:38:35:918][INFO ][com.example.demo.DemoApplication] No active profile set, falling back to 1 default profile: "default"
[20250110 16:38:36:099][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[20250110 16:38:36:145][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[20250110 16:38:40:059][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 16:38:40:074][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[20250110 16:38:41:300][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 1156 ms. Found 5 JPA repository interfaces.
[20250110 16:38:41:502][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 16:38:41:507][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[20250110 16:38:41:743][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:38:41:743][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:38:41:758][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.TossPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:38:41:786][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:38:41:815][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.WebPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:38:41:823][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 200 ms. Found 0 Redis repository interfaces.
[20250110 16:38:46:406][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8083 (http)
[20250110 16:38:46:709][INFO ][o.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8083"]
[20250110 16:38:46:737][INFO ][o.apache.catalina.core.StandardService] Starting service [Tomcat]
[20250110 16:38:46:740][INFO ][org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.31]
[20250110 16:38:48:190][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[20250110 16:38:48:225][INFO ][o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 12055 ms
[20250110 16:38:53:873][INFO ][o.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [name: default]
[20250110 16:38:54:487][INFO ][org.hibernate.Version] HHH000412: Hibernate ORM core version 6.5.3.Final
[20250110 16:38:54:889][INFO ][o.h.c.internal.RegionFactoryInitiator] HHH000026: Second-level cache disabled
[20250110 16:38:57:255][INFO ][o.s.o.j.p.SpringPersistenceUnitInfo] No LoadTimeWeaver setup: ignoring JPA class transformer
[20250110 16:38:57:452][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[20250110 16:38:59:826][INFO ][com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@53fd7c7a
[20250110 16:38:59:864][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[20250110 16:39:00:265][WARN ][org.hibernate.orm.deprecation] HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[20250110 16:39:01:446][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a4a6aaf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@671c0677)
[20250110 16:39:01:446][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64168d66) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b3e9bbf)
[20250110 16:39:01:446][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@62389965) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@651004eb)
[20250110 16:39:01:524][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@35bdc892) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ad15ef9)
[20250110 16:39:01:901][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c841b77) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@79566350)
[20250110 16:39:02:062][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@22f4cdb0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@12627981)
[20250110 16:39:02:117][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e819719) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64073d7a)
[20250110 16:39:02:195][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@601af507) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@613526f4)
[20250110 16:39:02:236][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@432e5c94) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e1f4566)
[20250110 16:39:08:909][INFO ][o.h.e.t.j.p.i.JtaPlatformInitiator] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[20250110 16:39:09:674][INFO ][o.s.o.j.LocalContainerEntityManagerFactoryBean] Initialized JPA EntityManagerFactory for persistence unit 'default'
[20250110 16:39:13:172][WARN ][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[20250110 16:39:13:274][INFO ][o.s.b.a.w.s.WelcomePageHandlerMapping] Adding welcome page template: index
[20250110 16:39:15:852][INFO ][o.s.b.d.a.OptionalLiveReloadServer] LiveReload server is running on port 35729
[20250110 16:39:15:931][INFO ][o.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8083"]
[20250110 16:39:16:164][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat started on port 8083 (http) with context path '/'
[20250110 16:39:16:195][INFO ][com.example.demo.DemoApplication] Started DemoApplication in 42.972 seconds (process running for 45.317)
[20250110 16:40:35:895][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[20250110 16:40:36:055][INFO ][o.s.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[20250110 16:40:36:562][INFO ][o.s.web.servlet.DispatcherServlet] Completed initialization in 505 ms
[20250110 16:40:38:891][WARN ][o.a.catalina.util.SessionIdGeneratorBase] Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [543] milliseconds.
[20250110 16:40:39:208][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 16:40:43:722][INFO ][com.example.demo.service.UserService] Redisø°º≠ ∑Œ±◊¿Œ √≥∏Æ
[20250110 16:40:43:722][INFO ][com.example.demo.service.UserService] ∑Œ±◊¿Œ √≥∏Æ Ω√∞£ (Redis ªÁøÎ): 903 ms
[20250110 16:40:44:520][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 16:40:44:628][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 16:40:44:649][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 16:40:44:782][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:40:44:807][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:40:45:754][WARN ][o.s.w.s.m.s.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'signupId' for method parameter type String is not present]
[20250110 16:42:31:066][INFO ][com.example.demo.DemoApplication] Starting DemoApplication using Java 17.0.3 with PID 10416 (C:\Users\user\Desktop\demo\build\classes\java\main started by √÷¡¯«ı in C:\Users\user\Desktop\demo)
[20250110 16:42:31:081][INFO ][com.example.demo.DemoApplication] No active profile set, falling back to 1 default profile: "default"
[20250110 16:42:31:859][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[20250110 16:42:31:861][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[20250110 16:42:36:390][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 16:42:36:400][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[20250110 16:42:36:950][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 523 ms. Found 5 JPA repository interfaces.
[20250110 16:42:37:019][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 16:42:37:023][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[20250110 16:42:37:064][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:42:37:074][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:42:37:077][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.TossPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:42:37:080][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:42:37:083][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.WebPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:42:37:086][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 38 ms. Found 0 Redis repository interfaces.
[20250110 16:42:39:262][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8083 (http)
[20250110 16:42:39:299][INFO ][o.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8083"]
[20250110 16:42:39:341][INFO ][o.apache.catalina.core.StandardService] Starting service [Tomcat]
[20250110 16:42:39:343][INFO ][org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.31]
[20250110 16:42:39:578][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[20250110 16:42:39:579][INFO ][o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 7716 ms
[20250110 16:42:40:037][INFO ][o.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [name: default]
[20250110 16:42:40:274][INFO ][org.hibernate.Version] HHH000412: Hibernate ORM core version 6.5.3.Final
[20250110 16:42:40:423][INFO ][o.h.c.internal.RegionFactoryInitiator] HHH000026: Second-level cache disabled
[20250110 16:42:41:556][INFO ][o.s.o.j.p.SpringPersistenceUnitInfo] No LoadTimeWeaver setup: ignoring JPA class transformer
[20250110 16:42:41:645][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[20250110 16:42:42:483][INFO ][com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@32fc967f
[20250110 16:42:42:492][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[20250110 16:42:42:701][WARN ][org.hibernate.orm.deprecation] HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[20250110 16:42:42:794][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e8d499c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39831bbb)
[20250110 16:42:42:796][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4e134db4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@68c3988a)
[20250110 16:42:42:797][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c76eda7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3d096351)
[20250110 16:42:42:798][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6923e7a9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1dd035cf)
[20250110 16:42:42:800][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@36e0f807) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@40050661)
[20250110 16:42:42:801][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@36edaf67) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2a0f9a38)
[20250110 16:42:42:803][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b1e6fbe) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73c044b2)
[20250110 16:42:42:807][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@280d4b3a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7e05ca59)
[20250110 16:42:42:810][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@160e29b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@679a0a1f)
[20250110 16:42:45:843][INFO ][o.h.e.t.j.p.i.JtaPlatformInitiator] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[20250110 16:42:46:157][INFO ][o.s.o.j.LocalContainerEntityManagerFactoryBean] Initialized JPA EntityManagerFactory for persistence unit 'default'
[20250110 16:42:48:273][WARN ][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[20250110 16:42:48:337][INFO ][o.s.b.a.w.s.WelcomePageHandlerMapping] Adding welcome page template: index
[20250110 16:42:49:633][INFO ][o.s.b.d.a.OptionalLiveReloadServer] LiveReload server is running on port 35729
[20250110 16:42:49:700][INFO ][o.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8083"]
[20250110 16:42:49:800][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat started on port 8083 (http) with context path '/'
[20250110 16:42:49:842][INFO ][com.example.demo.DemoApplication] Started DemoApplication in 22.661 seconds (process running for 28.799)
[20250110 16:43:18:960][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[20250110 16:43:18:960][INFO ][o.s.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[20250110 16:43:18:969][INFO ][o.s.web.servlet.DispatcherServlet] Completed initialization in 9 ms
[20250110 16:43:20:072][WARN ][o.a.catalina.util.SessionIdGeneratorBase] Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [376] milliseconds.
[20250110 16:43:20:150][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 16:43:31:986][INFO ][com.example.demo.service.UserService] Redisø°º≠ ∑Œ±◊¿Œ √≥∏Æ
[20250110 16:43:31:987][INFO ][com.example.demo.service.UserService] ∑Œ±◊¿Œ √≥∏Æ Ω√∞£ (Redis ªÁøÎ): 933 ms
[20250110 16:43:33:110][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 16:43:33:302][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:43:33:309][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 16:43:33:328][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 16:43:33:369][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:43:34:180][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ Ω«∆–. DBø°º≠ ¡∂»∏ »ƒ ƒ≥Ω√ √≥∏Æ.
[20250110 16:43:34:186][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:43:34:201][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 16:43:34:236][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:43:34:261][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 16:43:34:269][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 16:43:34:274][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:43:34:280][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 16:43:34:303][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 16:43:55:487][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 16:43:57:347][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:43:57:359][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 16:43:57:371][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 16:43:57:427][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:43:57:510][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 16:43:57:614][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:43:57:619][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 16:43:57:623][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 16:43:57:627][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 16:43:58:613][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 16:44:11:393][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:44:11:412][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 16:44:11:418][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 16:44:11:564][DEBUG][org.hibernate.SQL] insert into cart (created_at,product_id,quantity,updated_at,signup_id) values (?,?,?,?,?)
[20250110 16:44:12:002][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:44:12:002][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 16:44:12:010][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:44:12:010][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 16:44:12:010][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 16:44:12:021][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 16:44:13:310][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 16:51:06:474][INFO ][com.example.demo.DemoApplication] Starting DemoApplication using Java 17.0.3 with PID 7760 (C:\Users\user\Desktop\demo\build\classes\java\main started by √÷¡¯«ı in C:\Users\user\Desktop\demo)
[20250110 16:51:06:524][INFO ][com.example.demo.DemoApplication] No active profile set, falling back to 1 default profile: "default"
[20250110 16:51:06:776][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[20250110 16:51:06:778][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[20250110 16:51:09:739][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 16:51:09:745][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[20250110 16:51:10:347][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 576 ms. Found 5 JPA repository interfaces.
[20250110 16:51:10:436][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 16:51:10:441][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[20250110 16:51:10:496][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:51:10:500][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:51:10:502][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.TossPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:51:10:505][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:51:10:508][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.WebPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 16:51:10:512][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 35 ms. Found 0 Redis repository interfaces.
[20250110 16:51:12:426][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8083 (http)
[20250110 16:51:12:454][INFO ][o.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8083"]
[20250110 16:51:12:466][INFO ][o.apache.catalina.core.StandardService] Starting service [Tomcat]
[20250110 16:51:12:469][INFO ][org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.31]
[20250110 16:51:12:636][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[20250110 16:51:12:638][INFO ][o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 5857 ms
[20250110 16:51:12:970][INFO ][o.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [name: default]
[20250110 16:51:13:150][INFO ][org.hibernate.Version] HHH000412: Hibernate ORM core version 6.5.3.Final
[20250110 16:51:13:235][INFO ][o.h.c.internal.RegionFactoryInitiator] HHH000026: Second-level cache disabled
[20250110 16:51:14:181][INFO ][o.s.o.j.p.SpringPersistenceUnitInfo] No LoadTimeWeaver setup: ignoring JPA class transformer
[20250110 16:51:14:341][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[20250110 16:51:15:177][INFO ][com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3f47c0a3
[20250110 16:51:15:184][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[20250110 16:51:15:385][WARN ][org.hibernate.orm.deprecation] HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[20250110 16:51:15:464][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b381b88) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@590a7c75)
[20250110 16:51:15:466][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2128f411) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@11b39d5e)
[20250110 16:51:15:467][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2a6c30bb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@200f1857)
[20250110 16:51:15:468][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4661e83b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4b35c4c4)
[20250110 16:51:15:470][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17dcf1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5882b104)
[20250110 16:51:15:472][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@116baa1f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@741d4f12)
[20250110 16:51:15:476][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a53f534) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71467eb)
[20250110 16:51:15:478][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4be30e44) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5598adf5)
[20250110 16:51:15:480][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b71827) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@24380ce5)
[20250110 16:51:17:890][INFO ][o.h.e.t.j.p.i.JtaPlatformInitiator] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[20250110 16:51:18:197][INFO ][o.s.o.j.LocalContainerEntityManagerFactoryBean] Initialized JPA EntityManagerFactory for persistence unit 'default'
[20250110 16:51:20:213][WARN ][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[20250110 16:51:20:291][INFO ][o.s.b.a.w.s.WelcomePageHandlerMapping] Adding welcome page template: index
[20250110 16:51:21:447][INFO ][o.s.b.d.a.OptionalLiveReloadServer] LiveReload server is running on port 35729
[20250110 16:51:21:478][INFO ][o.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8083"]
[20250110 16:51:21:562][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat started on port 8083 (http) with context path '/'
[20250110 16:51:21:599][INFO ][com.example.demo.DemoApplication] Started DemoApplication in 18.23 seconds (process running for 21.491)
[20250110 16:52:16:693][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[20250110 16:52:16:697][INFO ][o.s.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[20250110 16:52:16:711][INFO ][o.s.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[20250110 16:52:18:074][WARN ][o.a.catalina.util.SessionIdGeneratorBase] Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [316] milliseconds.
[20250110 16:52:18:260][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 16:53:08:093][INFO ][com.example.demo.service.UserService] Redisø°º≠ ∑Œ±◊¿Œ √≥∏Æ
[20250110 16:53:08:094][INFO ][com.example.demo.service.UserService] ∑Œ±◊¿Œ √≥∏Æ Ω√∞£ (Redis ªÁøÎ): 844 ms
[20250110 16:53:09:094][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 16:53:09:210][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 16:53:09:226][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 16:53:09:224][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:53:09:260][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:53:10:409][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 16:53:26:237][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:53:26:267][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 16:53:26:297][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 16:53:26:321][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:53:26:388][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 16:53:26:416][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:53:26:419][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 16:53:26:438][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 16:53:26:450][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 16:53:26:473][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 16:53:27:935][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 16:53:39:032][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:53:39:040][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 16:53:39:049][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 16:53:39:051][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:53:39:065][DEBUG][org.hibernate.SQL] delete from cart where id=?
[20250110 16:53:39:097][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:53:39:097][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 16:53:39:113][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 16:53:39:113][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 16:53:39:113][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 16:53:40:667][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 16:53:49:951][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:53:49:956][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 16:53:49:970][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 16:53:49:973][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:53:49:983][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 16:53:50:059][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:53:50:059][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 16:53:50:059][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 16:53:50:078][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 16:53:51:082][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 16:53:59:984][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:53:59:992][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 16:53:59:999][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 16:54:00:004][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:54:00:008][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 16:54:00:023][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 16:54:00:023][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 16:54:00:039][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 16:54:00:055][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 16:54:00:947][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 16:55:59:223][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 16:56:02:474][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 17:03:54:515][INFO ][com.example.demo.DemoApplication] Starting DemoApplication using Java 17.0.3 with PID 12744 (C:\Users\user\Desktop\demo\build\classes\java\main started by √÷¡¯«ı in C:\Users\user\Desktop\demo)
[20250110 17:03:54:518][INFO ][com.example.demo.DemoApplication] No active profile set, falling back to 1 default profile: "default"
[20250110 17:03:54:928][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[20250110 17:03:54:928][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[20250110 17:03:58:320][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 17:03:58:390][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[20250110 17:03:58:902][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 449 ms. Found 5 JPA repository interfaces.
[20250110 17:03:58:959][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 17:03:58:959][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[20250110 17:03:58:987][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:03:59:006][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:03:59:006][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.TossPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:03:59:006][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:03:59:006][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.WebPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:03:59:006][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 27 ms. Found 0 Redis repository interfaces.
[20250110 17:04:00:623][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8083 (http)
[20250110 17:04:00:657][INFO ][o.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8083"]
[20250110 17:04:00:674][INFO ][o.apache.catalina.core.StandardService] Starting service [Tomcat]
[20250110 17:04:00:674][INFO ][org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.31]
[20250110 17:04:00:887][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[20250110 17:04:00:887][INFO ][o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 5891 ms
[20250110 17:04:01:299][INFO ][o.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [name: default]
[20250110 17:04:01:544][INFO ][org.hibernate.Version] HHH000412: Hibernate ORM core version 6.5.3.Final
[20250110 17:04:01:729][INFO ][o.h.c.internal.RegionFactoryInitiator] HHH000026: Second-level cache disabled
[20250110 17:04:02:706][INFO ][o.s.o.j.p.SpringPersistenceUnitInfo] No LoadTimeWeaver setup: ignoring JPA class transformer
[20250110 17:04:02:801][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[20250110 17:04:03:784][INFO ][com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@48ba977e
[20250110 17:04:03:800][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[20250110 17:04:04:021][WARN ][org.hibernate.orm.deprecation] HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[20250110 17:04:04:131][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3cb20d1c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@23c1c595)
[20250110 17:04:04:133][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1dbdf3ef) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@41437f5b)
[20250110 17:04:04:134][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d354082) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4075dddc)
[20250110 17:04:04:134][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32257cb6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@68c6640e)
[20250110 17:04:04:134][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2fb008c4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41c5abd3)
[20250110 17:04:04:141][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@581cbf91) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a15688)
[20250110 17:04:04:143][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2cf89810) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@408f356f)
[20250110 17:04:04:145][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d52fad8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74cee6ec)
[20250110 17:04:04:147][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c1ec87d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2583b2dc)
[20250110 17:04:06:384][INFO ][o.h.e.t.j.p.i.JtaPlatformInitiator] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[20250110 17:04:06:643][INFO ][o.s.o.j.LocalContainerEntityManagerFactoryBean] Initialized JPA EntityManagerFactory for persistence unit 'default'
[20250110 17:04:08:715][WARN ][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[20250110 17:04:08:816][INFO ][o.s.b.a.w.s.WelcomePageHandlerMapping] Adding welcome page template: index
[20250110 17:04:10:032][INFO ][o.s.b.d.a.OptionalLiveReloadServer] LiveReload server is running on port 35729
[20250110 17:04:10:073][INFO ][o.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8083"]
[20250110 17:04:10:149][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat started on port 8083 (http) with context path '/'
[20250110 17:04:10:176][INFO ][com.example.demo.DemoApplication] Started DemoApplication in 18.503 seconds (process running for 20.843)
[20250110 17:10:16:505][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[20250110 17:10:16:509][INFO ][o.s.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[20250110 17:10:16:513][INFO ][o.s.web.servlet.DispatcherServlet] Completed initialization in 3 ms
[20250110 17:10:17:288][WARN ][o.a.catalina.util.SessionIdGeneratorBase] Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [228] milliseconds.
[20250110 17:10:17:457][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 17:10:20:689][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:10:20:923][INFO ][com.example.demo.service.UserService] ∑Œ±◊¿Œ √≥∏Æ Ω√∞£ (DB ¡∂»∏ »ƒ Redis ¿˙¿Â): 1116 ms
[20250110 17:10:22:527][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 17:10:22:530][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:10:22:660][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 17:10:22:674][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 17:10:22:695][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:10:23:456][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 17:10:27:763][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:10:27:790][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:10:27:807][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:10:27:840][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:10:27:906][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 17:10:27:938][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:10:27:938][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:10:27:960][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:10:27:976][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:10:36:834][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 17:10:49:245][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:10:49:255][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:10:49:262][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:10:49:268][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:10:49:269][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 17:10:49:298][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:10:49:303][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:10:49:303][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:10:49:317][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:10:50:248][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 17:15:22:876][INFO ][com.example.demo.DemoApplication] Starting DemoApplication using Java 17.0.3 with PID 12720 (C:\Users\user\Desktop\demo\build\classes\java\main started by √÷¡¯«ı in C:\Users\user\Desktop\demo)
[20250110 17:15:22:876][INFO ][com.example.demo.DemoApplication] No active profile set, falling back to 1 default profile: "default"
[20250110 17:15:23:130][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[20250110 17:15:23:146][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[20250110 17:15:26:532][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 17:15:26:532][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[20250110 17:15:27:192][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 598 ms. Found 5 JPA repository interfaces.
[20250110 17:15:27:398][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 17:15:27:413][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[20250110 17:15:27:521][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:15:27:523][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:15:27:533][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.TossPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:15:27:535][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:15:27:536][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.WebPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:15:27:547][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 45 ms. Found 0 Redis repository interfaces.
[20250110 17:15:30:003][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8083 (http)
[20250110 17:15:30:042][INFO ][o.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8083"]
[20250110 17:15:30:053][INFO ][o.apache.catalina.core.StandardService] Starting service [Tomcat]
[20250110 17:15:30:053][INFO ][org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.31]
[20250110 17:15:30:234][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[20250110 17:15:30:234][INFO ][o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 7088 ms
[20250110 17:15:30:662][INFO ][o.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [name: default]
[20250110 17:15:30:896][INFO ][org.hibernate.Version] HHH000412: Hibernate ORM core version 6.5.3.Final
[20250110 17:15:31:047][INFO ][o.h.c.internal.RegionFactoryInitiator] HHH000026: Second-level cache disabled
[20250110 17:15:31:984][INFO ][o.s.o.j.p.SpringPersistenceUnitInfo] No LoadTimeWeaver setup: ignoring JPA class transformer
[20250110 17:15:32:074][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[20250110 17:15:32:960][INFO ][com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@32cc9c8c
[20250110 17:15:32:968][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[20250110 17:15:33:249][WARN ][org.hibernate.orm.deprecation] HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[20250110 17:15:33:357][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c140210) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14d5d93e)
[20250110 17:15:33:366][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1dd7f8f2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d16a98c)
[20250110 17:15:33:367][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@411e36bc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b381b88)
[20250110 17:15:33:367][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@590a7c75) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2128f411)
[20250110 17:15:33:367][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@11b39d5e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2a6c30bb)
[20250110 17:15:33:383][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@200f1857) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4661e83b)
[20250110 17:15:33:402][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b35c4c4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17dcf1)
[20250110 17:15:33:402][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5882b104) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@116baa1f)
[20250110 17:15:33:402][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@741d4f12) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4a53f534)
[20250110 17:15:35:857][INFO ][o.h.e.t.j.p.i.JtaPlatformInitiator] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[20250110 17:15:36:047][INFO ][o.s.o.j.LocalContainerEntityManagerFactoryBean] Initialized JPA EntityManagerFactory for persistence unit 'default'
[20250110 17:15:37:913][WARN ][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[20250110 17:15:37:982][INFO ][o.s.b.a.w.s.WelcomePageHandlerMapping] Adding welcome page template: index
[20250110 17:15:39:065][INFO ][o.s.b.d.a.OptionalLiveReloadServer] LiveReload server is running on port 35729
[20250110 17:15:39:153][INFO ][o.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8083"]
[20250110 17:15:39:282][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat started on port 8083 (http) with context path '/'
[20250110 17:15:39:300][INFO ][com.example.demo.DemoApplication] Started DemoApplication in 18.578 seconds (process running for 22.471)
[20250110 17:19:51:850][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[20250110 17:19:51:850][INFO ][o.s.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[20250110 17:19:51:865][INFO ][o.s.web.servlet.DispatcherServlet] Completed initialization in 15 ms
[20250110 17:19:53:157][WARN ][o.a.catalina.util.SessionIdGeneratorBase] Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [273] milliseconds.
[20250110 17:19:53:259][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 17:19:56:124][INFO ][com.example.demo.service.UserService] Redisø°º≠ ∑Œ±◊¿Œ √≥∏Æ
[20250110 17:19:56:127][INFO ][com.example.demo.service.UserService] ∑Œ±◊¿Œ √≥∏Æ Ω√∞£ (Redis ªÁøÎ): 837 ms
[20250110 17:19:58:229][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 17:19:58:304][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 17:19:58:324][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 17:19:58:380][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:19:58:380][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:19:59:222][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 17:20:14:515][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:20:14:537][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:20:14:557][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:20:14:570][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:20:14:638][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 17:20:14:673][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:20:14:673][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:20:14:701][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:20:14:724][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:20:15:670][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 17:20:22:253][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:20:22:272][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:20:22:278][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:20:22:282][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:20:22:288][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 17:20:22:307][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:20:22:313][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:20:22:324][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:20:22:324][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:20:23:279][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 17:21:47:485][INFO ][com.example.demo.DemoApplication] Starting DemoApplication using Java 17.0.3 with PID 3768 (C:\Users\user\Desktop\demo\build\classes\java\main started by √÷¡¯«ı in C:\Users\user\Desktop\demo)
[20250110 17:21:47:488][INFO ][com.example.demo.DemoApplication] No active profile set, falling back to 1 default profile: "default"
[20250110 17:21:47:617][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[20250110 17:21:47:617][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[20250110 17:21:51:264][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 17:21:51:271][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[20250110 17:21:52:105][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 795 ms. Found 5 JPA repository interfaces.
[20250110 17:21:52:223][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 17:21:52:223][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[20250110 17:21:52:312][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:21:52:323][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:21:52:324][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.TossPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:21:52:324][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:21:52:342][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.WebPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:21:52:347][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 83 ms. Found 0 Redis repository interfaces.
[20250110 17:21:54:236][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8083 (http)
[20250110 17:21:54:275][INFO ][o.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8083"]
[20250110 17:21:54:287][INFO ][o.apache.catalina.core.StandardService] Starting service [Tomcat]
[20250110 17:21:54:287][INFO ][org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.31]
[20250110 17:21:54:501][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[20250110 17:21:54:501][INFO ][o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 6884 ms
[20250110 17:21:55:018][INFO ][o.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [name: default]
[20250110 17:21:55:269][INFO ][org.hibernate.Version] HHH000412: Hibernate ORM core version 6.5.3.Final
[20250110 17:21:55:370][INFO ][o.h.c.internal.RegionFactoryInitiator] HHH000026: Second-level cache disabled
[20250110 17:21:56:087][INFO ][o.s.o.j.p.SpringPersistenceUnitInfo] No LoadTimeWeaver setup: ignoring JPA class transformer
[20250110 17:21:56:177][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[20250110 17:21:56:937][INFO ][com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3d39545c
[20250110 17:21:56:954][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[20250110 17:21:57:133][WARN ][org.hibernate.orm.deprecation] HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[20250110 17:21:57:187][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@68c6640e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2fb008c4)
[20250110 17:21:57:187][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@41c5abd3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@581cbf91)
[20250110 17:21:57:202][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a15688) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2cf89810)
[20250110 17:21:57:203][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@408f356f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d52fad8)
[20250110 17:21:57:204][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74cee6ec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c1ec87d)
[20250110 17:21:57:205][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2583b2dc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f6d088e)
[20250110 17:21:57:207][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4c977e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@26a00ac6)
[20250110 17:21:57:209][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e8d499c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39831bbb)
[20250110 17:21:57:211][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4e134db4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@68c3988a)
[20250110 17:21:59:517][INFO ][o.h.e.t.j.p.i.JtaPlatformInitiator] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[20250110 17:21:59:768][INFO ][o.s.o.j.LocalContainerEntityManagerFactoryBean] Initialized JPA EntityManagerFactory for persistence unit 'default'
[20250110 17:22:02:526][WARN ][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[20250110 17:22:02:674][INFO ][o.s.b.a.w.s.WelcomePageHandlerMapping] Adding welcome page template: index
[20250110 17:22:03:917][INFO ][o.s.b.d.a.OptionalLiveReloadServer] LiveReload server is running on port 35729
[20250110 17:22:03:967][INFO ][o.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8083"]
[20250110 17:22:04:034][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat started on port 8083 (http) with context path '/'
[20250110 17:22:04:051][INFO ][com.example.demo.DemoApplication] Started DemoApplication in 19.171 seconds (process running for 21.869)
[20250110 17:23:08:764][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[20250110 17:23:08:764][INFO ][o.s.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[20250110 17:23:08:764][INFO ][o.s.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[20250110 17:23:10:093][WARN ][o.a.catalina.util.SessionIdGeneratorBase] Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [193] milliseconds.
[20250110 17:23:10:233][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 17:23:14:219][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:23:14:472][INFO ][com.example.demo.service.UserService] ∑Œ±◊¿Œ √≥∏Æ Ω√∞£ (DB ¡∂»∏ »ƒ Redis ¿˙¿Â): 1096 ms
[20250110 17:23:15:201][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 17:23:15:205][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:23:15:304][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 17:23:15:312][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 17:23:15:328][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:23:17:450][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ Ω«∆–. DBø°º≠ ¡∂»∏ »ƒ ƒ≥Ω√ √≥∏Æ.
[20250110 17:23:17:456][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:23:17:526][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:23:17:583][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:23:17:594][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:23:17:612][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:23:17:612][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:23:17:633][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:23:17:645][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:23:19:173][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:23:19:186][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:23:19:200][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:23:19:209][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:23:19:275][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 17:23:19:327][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:23:19:327][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:23:19:341][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:23:19:344][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:23:20:439][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 17:28:03:912][INFO ][com.example.demo.DemoApplication] Starting DemoApplication using Java 17.0.3 with PID 18672 (C:\Users\user\Desktop\demo\build\classes\java\main started by √÷¡¯«ı in C:\Users\user\Desktop\demo)
[20250110 17:28:04:063][INFO ][com.example.demo.DemoApplication] No active profile set, falling back to 1 default profile: "default"
[20250110 17:28:04:238][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[20250110 17:28:04:238][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[20250110 17:28:07:470][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 17:28:07:486][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[20250110 17:28:08:115][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 588 ms. Found 5 JPA repository interfaces.
[20250110 17:28:08:210][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 17:28:08:225][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[20250110 17:28:08:302][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:28:08:307][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:28:08:312][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.TossPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:28:08:316][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:28:08:320][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.WebPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:28:08:322][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 40 ms. Found 0 Redis repository interfaces.
[20250110 17:28:10:260][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8083 (http)
[20250110 17:28:10:284][INFO ][o.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8083"]
[20250110 17:28:10:293][INFO ][o.apache.catalina.core.StandardService] Starting service [Tomcat]
[20250110 17:28:10:296][INFO ][org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.31]
[20250110 17:28:10:474][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[20250110 17:28:10:474][INFO ][o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 6236 ms
[20250110 17:28:10:872][INFO ][o.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [name: default]
[20250110 17:28:11:344][INFO ][org.hibernate.Version] HHH000412: Hibernate ORM core version 6.5.3.Final
[20250110 17:28:11:522][INFO ][o.h.c.internal.RegionFactoryInitiator] HHH000026: Second-level cache disabled
[20250110 17:28:12:709][INFO ][o.s.o.j.p.SpringPersistenceUnitInfo] No LoadTimeWeaver setup: ignoring JPA class transformer
[20250110 17:28:12:834][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[20250110 17:28:14:289][INFO ][com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6c067728
[20250110 17:28:14:305][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[20250110 17:28:14:517][WARN ][org.hibernate.orm.deprecation] HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[20250110 17:28:14:643][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5598adf5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b71827)
[20250110 17:28:14:643][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@24380ce5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@777aa708)
[20250110 17:28:14:643][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@679d5b17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5f5301e3)
[20250110 17:28:14:643][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b6861c8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1988d34a)
[20250110 17:28:14:643][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1440768f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@535b21fd)
[20250110 17:28:14:662][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2bc57c7f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7488e8ce)
[20250110 17:28:14:662][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@63eb1cde) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@69b59d97)
[20250110 17:28:14:662][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6993225a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5a6e693e)
[20250110 17:28:14:662][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61d89341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@24c4e3c8)
[20250110 17:28:17:580][INFO ][o.h.e.t.j.p.i.JtaPlatformInitiator] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[20250110 17:28:17:867][INFO ][o.s.o.j.LocalContainerEntityManagerFactoryBean] Initialized JPA EntityManagerFactory for persistence unit 'default'
[20250110 17:28:19:932][WARN ][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[20250110 17:28:20:023][INFO ][o.s.b.a.w.s.WelcomePageHandlerMapping] Adding welcome page template: index
[20250110 17:28:21:290][INFO ][o.s.b.d.a.OptionalLiveReloadServer] LiveReload server is running on port 35729
[20250110 17:28:21:324][INFO ][o.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8083"]
[20250110 17:28:21:423][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat started on port 8083 (http) with context path '/'
[20250110 17:28:21:461][INFO ][com.example.demo.DemoApplication] Started DemoApplication in 20.9 seconds (process running for 22.672)
[20250110 17:29:11:777][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[20250110 17:29:11:777][INFO ][o.s.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[20250110 17:29:11:777][INFO ][o.s.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[20250110 17:29:14:139][WARN ][o.a.catalina.util.SessionIdGeneratorBase] Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [463] milliseconds.
[20250110 17:29:14:603][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 17:29:19:755][INFO ][com.example.demo.service.UserService] Redisø°º≠ ∑Œ±◊¿Œ √≥∏Æ
[20250110 17:29:19:756][INFO ][com.example.demo.service.UserService] ∑Œ±◊¿Œ √≥∏Æ Ω√∞£ (Redis ªÁøÎ): 785 ms
[20250110 17:29:20:344][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 17:29:20:434][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 17:29:20:469][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 17:29:20:561][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:29:20:561][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:29:21:204][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 17:29:24:789][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 17:29:26:021][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:29:26:055][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:29:26:070][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:29:26:104][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:29:26:175][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 17:29:26:248][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:29:26:254][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:29:26:269][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:29:26:291][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:29:32:678][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 17:29:37:876][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:29:37:885][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:29:37:894][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:29:37:900][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:29:37:907][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 17:29:37:915][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:29:37:915][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:29:37:930][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:29:37:930][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:29:39:040][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 17:29:49:087][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:29:49:095][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:29:49:102][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:29:49:134][DEBUG][org.hibernate.SQL] insert into cart (created_at,product_id,quantity,updated_at,signup_id) values (?,?,?,?,?)
[20250110 17:29:49:183][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:29:49:198][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:29:49:198][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:29:49:198][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:29:49:198][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:29:49:216][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:29:50:164][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 17:37:02:762][INFO ][com.example.demo.DemoApplication] Starting DemoApplication using Java 17.0.3 with PID 9524 (C:\Users\user\Desktop\demo\build\classes\java\main started by √÷¡¯«ı in C:\Users\user\Desktop\demo)
[20250110 17:37:02:793][INFO ][com.example.demo.DemoApplication] No active profile set, falling back to 1 default profile: "default"
[20250110 17:37:03:035][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[20250110 17:37:03:035][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[20250110 17:37:07:318][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 17:37:07:364][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[20250110 17:37:08:277][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 862 ms. Found 5 JPA repository interfaces.
[20250110 17:37:08:382][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 17:37:08:387][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[20250110 17:37:08:510][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:37:08:542][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:37:08:563][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.TossPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:37:08:580][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:37:08:580][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.WebPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:37:08:580][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 145 ms. Found 0 Redis repository interfaces.
[20250110 17:37:12:793][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8083 (http)
[20250110 17:37:12:894][INFO ][o.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8083"]
[20250110 17:37:12:961][INFO ][o.apache.catalina.core.StandardService] Starting service [Tomcat]
[20250110 17:37:12:961][INFO ][org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.31]
[20250110 17:37:13:274][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[20250110 17:37:13:274][INFO ][o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 10223 ms
[20250110 17:37:14:376][INFO ][o.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [name: default]
[20250110 17:37:14:815][INFO ][org.hibernate.Version] HHH000412: Hibernate ORM core version 6.5.3.Final
[20250110 17:37:15:013][INFO ][o.h.c.internal.RegionFactoryInitiator] HHH000026: Second-level cache disabled
[20250110 17:37:16:471][INFO ][o.s.o.j.p.SpringPersistenceUnitInfo] No LoadTimeWeaver setup: ignoring JPA class transformer
[20250110 17:37:16:675][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[20250110 17:37:18:027][INFO ][com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4169997f
[20250110 17:37:18:056][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[20250110 17:37:18:403][WARN ][org.hibernate.orm.deprecation] HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[20250110 17:37:18:526][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@225c735a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57f174cb)
[20250110 17:37:18:543][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61bed18c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@35395a05)
[20250110 17:37:18:546][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@743e295b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@28b55c3b)
[20250110 17:37:18:571][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3f90ca10) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@40064695)
[20250110 17:37:18:573][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45f7db3f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47a1033e)
[20250110 17:37:18:573][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7e588190) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c985220)
[20250110 17:37:18:573][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@774d4eaf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@38ba0b8b)
[20250110 17:37:18:573][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@254590d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4c131235)
[20250110 17:37:18:592][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5136052e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3938aad0)
[20250110 17:37:23:577][INFO ][o.h.e.t.j.p.i.JtaPlatformInitiator] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[20250110 17:37:23:955][INFO ][o.s.o.j.LocalContainerEntityManagerFactoryBean] Initialized JPA EntityManagerFactory for persistence unit 'default'
[20250110 17:37:28:530][WARN ][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[20250110 17:37:28:671][INFO ][o.s.b.a.w.s.WelcomePageHandlerMapping] Adding welcome page template: index
[20250110 17:37:31:412][INFO ][o.s.b.d.a.OptionalLiveReloadServer] LiveReload server is running on port 35729
[20250110 17:37:31:506][INFO ][o.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8083"]
[20250110 17:37:31:588][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat started on port 8083 (http) with context path '/'
[20250110 17:37:31:621][INFO ][com.example.demo.DemoApplication] Started DemoApplication in 32.881 seconds (process running for 35.702)
[20250110 17:38:44:163][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[20250110 17:38:44:212][INFO ][o.s.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[20250110 17:38:44:212][INFO ][o.s.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[20250110 17:38:45:142][WARN ][o.a.catalina.util.SessionIdGeneratorBase] Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [211] milliseconds.
[20250110 17:38:45:405][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 17:38:54:074][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:38:54:314][INFO ][com.example.demo.service.UserService] ∑Œ±◊¿Œ √≥∏Æ Ω√∞£ (DB ¡∂»∏ »ƒ Redis ¿˙¿Â): 1162 ms
[20250110 17:38:55:250][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 17:38:55:255][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:38:55:335][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 17:38:55:338][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:38:55:346][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 17:39:00:634][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ Ω«∆–. DBø°º≠ ¡∂»∏ »ƒ ƒ≥Ω√ √≥∏Æ.
[20250110 17:39:00:638][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:39:00:687][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:39:00:725][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:39:00:740][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:39:00:740][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:39:00:740][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:39:00:759][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:39:00:764][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:39:00:774][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:39:13:107][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:39:13:123][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:39:13:137][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:39:13:158][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:39:13:271][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 17:39:13:346][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:39:13:351][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:39:13:364][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:39:13:371][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:39:13:381][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:39:19:786][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 17:39:51:401][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:39:51:408][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:39:51:429][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:39:51:429][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:39:51:447][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 17:39:51:458][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:39:51:458][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:39:51:474][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:39:51:478][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:39:51:482][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:40:06:040][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 17:41:22:689][INFO ][com.example.demo.DemoApplication] Starting DemoApplication using Java 17.0.3 with PID 5636 (C:\Users\user\Desktop\demo\build\classes\java\main started by √÷¡¯«ı in C:\Users\user\Desktop\demo)
[20250110 17:41:22:726][INFO ][com.example.demo.DemoApplication] No active profile set, falling back to 1 default profile: "default"
[20250110 17:41:22:887][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[20250110 17:41:22:903][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[20250110 17:41:26:547][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 17:41:26:565][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[20250110 17:41:27:289][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 691 ms. Found 5 JPA repository interfaces.
[20250110 17:41:27:375][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 17:41:27:380][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[20250110 17:41:27:442][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:41:27:442][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:41:27:442][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.TossPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:41:27:455][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:41:27:467][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.WebPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:41:27:475][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 61 ms. Found 0 Redis repository interfaces.
[20250110 17:41:30:939][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8083 (http)
[20250110 17:41:30:992][INFO ][o.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8083"]
[20250110 17:41:31:005][INFO ][o.apache.catalina.core.StandardService] Starting service [Tomcat]
[20250110 17:41:31:026][INFO ][org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.31]
[20250110 17:41:31:309][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[20250110 17:41:31:309][INFO ][o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 8406 ms
[20250110 17:41:31:921][INFO ][o.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [name: default]
[20250110 17:41:32:284][INFO ][org.hibernate.Version] HHH000412: Hibernate ORM core version 6.5.3.Final
[20250110 17:41:32:466][INFO ][o.h.c.internal.RegionFactoryInitiator] HHH000026: Second-level cache disabled
[20250110 17:41:33:968][INFO ][o.s.o.j.p.SpringPersistenceUnitInfo] No LoadTimeWeaver setup: ignoring JPA class transformer
[20250110 17:41:34:220][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[20250110 17:41:35:869][INFO ][com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7f6cbe31
[20250110 17:41:35:894][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[20250110 17:41:36:180][WARN ][org.hibernate.orm.deprecation] HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[20250110 17:41:36:502][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@38e0db64) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61a89ded)
[20250110 17:41:36:672][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@75a4bf60) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c5b51c0)
[20250110 17:41:36:739][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@125e94d4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@373c2487)
[20250110 17:41:36:747][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@67b3c2bf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@11905ad8)
[20250110 17:41:36:749][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@778e940a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21408e60)
[20250110 17:41:36:764][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@589f16cd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4b4ac19c)
[20250110 17:41:36:789][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@48e7323b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6df186c9)
[20250110 17:41:36:823][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d78dcc4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50a3a2d6)
[20250110 17:41:36:839][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@21a43413) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@40823920)
[20250110 17:41:41:795][INFO ][o.h.e.t.j.p.i.JtaPlatformInitiator] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[20250110 17:41:42:160][INFO ][o.s.o.j.LocalContainerEntityManagerFactoryBean] Initialized JPA EntityManagerFactory for persistence unit 'default'
[20250110 17:41:47:924][WARN ][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[20250110 17:41:48:134][INFO ][o.s.b.a.w.s.WelcomePageHandlerMapping] Adding welcome page template: index
[20250110 17:41:52:201][INFO ][o.s.b.d.a.OptionalLiveReloadServer] LiveReload server is running on port 35729
[20250110 17:41:52:291][INFO ][o.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8083"]
[20250110 17:41:52:513][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat started on port 8083 (http) with context path '/'
[20250110 17:41:52:543][INFO ][com.example.demo.DemoApplication] Started DemoApplication in 32.45 seconds (process running for 35.073)
[20250110 17:41:57:231][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[20250110 17:41:57:234][INFO ][o.s.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[20250110 17:41:57:238][INFO ][o.s.web.servlet.DispatcherServlet] Completed initialization in 3 ms
[20250110 17:41:58:957][WARN ][o.a.catalina.util.SessionIdGeneratorBase] Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [642] milliseconds.
[20250110 17:41:59:177][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 17:42:06:189][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:42:07:082][INFO ][com.example.demo.service.UserService] ∑Œ±◊¿Œ √≥∏Æ Ω√∞£ (DB ¡∂»∏ »ƒ Redis ¿˙¿Â): 5314 ms
[20250110 17:42:08:445][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 17:42:08:450][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:42:09:090][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 17:42:09:119][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:42:09:136][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 17:42:10:932][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ Ω«∆–. DBø°º≠ ¡∂»∏ »ƒ ƒ≥Ω√ √≥∏Æ.
[20250110 17:42:10:946][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:42:11:042][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:42:11:211][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:42:11:252][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:42:11:266][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:42:11:270][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:42:11:277][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:42:11:283][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:42:11:295][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:42:23:143][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:42:23:195][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:42:23:261][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:42:23:271][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:42:23:664][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 17:42:23:714][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:42:23:721][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:42:23:726][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:42:23:729][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:42:23:734][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:42:36:346][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:42:36:360][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:42:36:426][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:42:36:442][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:42:36:454][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:42:36:458][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:42:36:462][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:42:36:465][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:42:36:473][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:42:44:202][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:42:44:218][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:42:44:227][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:42:44:241][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:42:44:249][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:42:44:254][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:42:44:258][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:42:44:262][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:42:44:272][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:42:52:023][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:42:52:046][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:42:52:059][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:42:52:067][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:42:52:090][DEBUG][org.hibernate.SQL] delete from cart where id=?
[20250110 17:42:52:115][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:42:52:119][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:42:52:122][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:42:52:125][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:42:52:132][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:42:54:018][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:42:54:030][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:42:54:040][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:42:54:047][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:42:54:054][DEBUG][org.hibernate.SQL] delete from cart where id=?
[20250110 17:42:54:083][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:42:54:087][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:42:54:093][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:42:54:098][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:42:56:036][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 17:43:01:264][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:43:01:275][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:43:01:287][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:43:01:297][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:43:01:297][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 17:43:01:311][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:43:01:311][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:43:01:311][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:44:06:504][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 17:44:09:628][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 17:44:11:472][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 17:46:59:971][INFO ][com.example.demo.DemoApplication] Starting DemoApplication using Java 17.0.3 with PID 7260 (C:\Users\user\Desktop\demo\build\classes\java\main started by √÷¡¯«ı in C:\Users\user\Desktop\demo)
[20250110 17:46:59:971][INFO ][com.example.demo.DemoApplication] No active profile set, falling back to 1 default profile: "default"
[20250110 17:47:00:269][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[20250110 17:47:00:269][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[20250110 17:47:03:339][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 17:47:03:354][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[20250110 17:47:03:759][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 379 ms. Found 5 JPA repository interfaces.
[20250110 17:47:03:813][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 17:47:03:816][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[20250110 17:47:03:844][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:47:03:844][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:47:03:844][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.TossPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:47:03:844][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:47:03:861][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.WebPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 17:47:03:866][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 30 ms. Found 0 Redis repository interfaces.
[20250110 17:47:05:765][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8083 (http)
[20250110 17:47:05:797][INFO ][o.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8083"]
[20250110 17:47:05:814][INFO ][o.apache.catalina.core.StandardService] Starting service [Tomcat]
[20250110 17:47:05:814][INFO ][org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.31]
[20250110 17:47:06:025][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[20250110 17:47:06:025][INFO ][o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 5683 ms
[20250110 17:47:06:575][INFO ][o.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [name: default]
[20250110 17:47:06:770][INFO ][org.hibernate.Version] HHH000412: Hibernate ORM core version 6.5.3.Final
[20250110 17:47:06:937][INFO ][o.h.c.internal.RegionFactoryInitiator] HHH000026: Second-level cache disabled
[20250110 17:47:07:686][INFO ][o.s.o.j.p.SpringPersistenceUnitInfo] No LoadTimeWeaver setup: ignoring JPA class transformer
[20250110 17:47:07:775][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[20250110 17:47:08:524][INFO ][com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@33e42990
[20250110 17:47:08:525][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[20250110 17:47:08:717][WARN ][org.hibernate.orm.deprecation] HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[20250110 17:47:08:817][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@28b55c3b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3f90ca10)
[20250110 17:47:08:819][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@40064695) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45f7db3f)
[20250110 17:47:08:821][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47a1033e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7e588190)
[20250110 17:47:08:823][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c985220) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@774d4eaf)
[20250110 17:47:08:860][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@38ba0b8b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@254590d)
[20250110 17:47:08:876][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4c131235) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5136052e)
[20250110 17:47:08:876][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3938aad0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@198400cb)
[20250110 17:47:08:876][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d523b74) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c2c5885)
[20250110 17:47:08:892][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50be19fa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6905d97e)
[20250110 17:47:11:433][INFO ][o.h.e.t.j.p.i.JtaPlatformInitiator] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[20250110 17:47:11:636][INFO ][o.s.o.j.LocalContainerEntityManagerFactoryBean] Initialized JPA EntityManagerFactory for persistence unit 'default'
[20250110 17:47:13:904][WARN ][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[20250110 17:47:13:982][INFO ][o.s.b.a.w.s.WelcomePageHandlerMapping] Adding welcome page template: index
[20250110 17:47:16:116][INFO ][o.s.b.d.a.OptionalLiveReloadServer] LiveReload server is running on port 35729
[20250110 17:47:16:156][INFO ][o.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8083"]
[20250110 17:47:16:278][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat started on port 8083 (http) with context path '/'
[20250110 17:47:16:308][INFO ][com.example.demo.DemoApplication] Started DemoApplication in 18.961 seconds (process running for 21.554)
[20250110 17:48:00:175][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[20250110 17:48:00:175][INFO ][o.s.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[20250110 17:48:00:175][INFO ][o.s.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[20250110 17:48:01:206][WARN ][o.a.catalina.util.SessionIdGeneratorBase] Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [445] milliseconds.
[20250110 17:48:01:432][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 17:48:05:962][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:06:148][INFO ][com.example.demo.service.UserService] ∑Œ±◊¿Œ √≥∏Æ Ω√∞£ (DB ¡∂»∏ »ƒ Redis ¿˙¿Â): 968 ms
[20250110 17:48:07:365][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 17:48:07:372][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:07:469][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 17:48:07:475][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 17:48:07:492][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:09:716][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ Ω«∆–. DBø°º≠ ¡∂»∏ »ƒ ƒ≥Ω√ √≥∏Æ.
[20250110 17:48:09:724][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:09:754][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:48:09:787][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:09:804][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:48:09:820][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:09:820][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:48:09:820][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:48:14:055][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:14:066][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:48:14:079][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:48:14:083][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:14:169][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 17:48:14:246][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:14:251][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:48:14:255][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:48:18:890][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:18:906][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:48:18:917][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:48:18:924][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:18:940][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:18:945][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:48:18:952][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:48:24:722][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:24:734][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:48:24:742][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:48:24:749][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:24:756][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:24:758][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:48:24:771][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:48:29:579][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:29:590][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:48:29:598][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:48:29:613][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:29:613][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:29:630][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:48:29:630][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:48:40:338][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 17:48:42:795][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 17:48:43:736][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:43:748][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:48:43:755][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:48:43:761][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:43:766][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 17:48:43:785][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:43:793][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:48:43:796][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:48:48:814][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 17:48:49:795][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:49:810][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:48:49:820][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:48:49:825][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:49:831][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 17:48:49:843][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:49:843][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:48:49:843][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:48:53:598][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:53:600][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:53:609][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:48:53:610][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:48:53:619][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:48:53:621][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:48:53:626][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:53:627][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:53:641][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:53:640][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:53:647][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:48:53:648][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:48:53:655][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:48:53:655][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 17:48:57:137][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:57:144][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 17:48:57:151][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 17:48:57:158][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:57:166][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 17:48:57:178][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 17:48:57:182][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:34:08:383][INFO ][com.example.demo.DemoApplication] Starting DemoApplication using Java 17.0.3 with PID 10600 (C:\Users\user\Desktop\demo\build\classes\java\main started by √÷¡¯«ı in C:\Users\user\Desktop\demo)
[20250110 19:34:08:453][INFO ][com.example.demo.DemoApplication] No active profile set, falling back to 1 default profile: "default"
[20250110 19:34:08:931][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[20250110 19:34:08:933][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[20250110 19:34:14:576][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 19:34:14:586][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[20250110 19:34:15:547][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 917 ms. Found 5 JPA repository interfaces.
[20250110 19:34:15:669][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 19:34:15:677][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[20250110 19:34:15:764][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 19:34:15:774][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 19:34:15:806][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.TossPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 19:34:15:814][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 19:34:15:824][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.WebPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 19:34:15:830][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 90 ms. Found 0 Redis repository interfaces.
[20250110 19:34:22:326][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8083 (http)
[20250110 19:34:22:419][INFO ][o.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8083"]
[20250110 19:34:22:436][INFO ][o.apache.catalina.core.StandardService] Starting service [Tomcat]
[20250110 19:34:22:440][INFO ][org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.31]
[20250110 19:34:22:794][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[20250110 19:34:22:797][INFO ][o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 13861 ms
[20250110 19:34:23:291][INFO ][o.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [name: default]
[20250110 19:34:23:712][INFO ][org.hibernate.Version] HHH000412: Hibernate ORM core version 6.5.3.Final
[20250110 19:34:23:924][INFO ][o.h.c.internal.RegionFactoryInitiator] HHH000026: Second-level cache disabled
[20250110 19:34:25:314][INFO ][o.s.o.j.p.SpringPersistenceUnitInfo] No LoadTimeWeaver setup: ignoring JPA class transformer
[20250110 19:34:25:513][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[20250110 19:34:27:246][INFO ][com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1c56602c
[20250110 19:34:27:260][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[20250110 19:34:27:934][WARN ][org.hibernate.orm.deprecation] HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[20250110 19:34:28:087][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@743e295b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@28b55c3b)
[20250110 19:34:28:089][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3f90ca10) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@40064695)
[20250110 19:34:28:090][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45f7db3f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47a1033e)
[20250110 19:34:28:092][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7e588190) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c985220)
[20250110 19:34:28:094][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@774d4eaf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@38ba0b8b)
[20250110 19:34:28:101][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@254590d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4c131235)
[20250110 19:34:28:153][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5136052e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3938aad0)
[20250110 19:34:28:157][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@198400cb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4d523b74)
[20250110 19:34:28:207][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c2c5885) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50be19fa)
[20250110 19:34:33:711][INFO ][o.h.e.t.j.p.i.JtaPlatformInitiator] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[20250110 19:34:34:200][INFO ][o.s.o.j.LocalContainerEntityManagerFactoryBean] Initialized JPA EntityManagerFactory for persistence unit 'default'
[20250110 19:34:39:942][WARN ][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[20250110 19:34:40:195][INFO ][o.s.b.a.w.s.WelcomePageHandlerMapping] Adding welcome page template: index
[20250110 19:34:43:358][INFO ][o.s.b.d.a.OptionalLiveReloadServer] LiveReload server is running on port 35729
[20250110 19:34:43:725][INFO ][o.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8083"]
[20250110 19:34:44:825][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat started on port 8083 (http) with context path '/'
[20250110 19:34:44:955][INFO ][com.example.demo.DemoApplication] Started DemoApplication in 40.98 seconds (process running for 43.928)
[20250110 19:34:45:182][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[20250110 19:34:45:190][INFO ][o.s.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[20250110 19:34:45:205][INFO ][o.s.web.servlet.DispatcherServlet] Completed initialization in 2 ms
[20250110 19:34:46:919][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 19:34:46:977][WARN ][o.a.catalina.util.SessionIdGeneratorBase] Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [711] milliseconds.
[20250110 19:34:52:970][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:34:53:261][INFO ][com.example.demo.service.UserService] ∑Œ±◊¿Œ √≥∏Æ Ω√∞£ (DB ¡∂»∏ »ƒ Redis ¿˙¿Â): 3297 ms
[20250110 19:34:57:712][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 19:34:57:718][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:34:57:926][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 19:34:58:078][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 19:34:58:093][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:34:59:846][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ Ω«∆–. DBø°º≠ ¡∂»∏ »ƒ ƒ≥Ω√ √≥∏Æ.
[20250110 19:34:59:849][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:34:59:880][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:34:59:949][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:35:00:092][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:35:00:113][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:35:00:121][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:35:00:150][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:35:17:828][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:35:17:863][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:35:17:875][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 19:35:17:883][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:35:18:008][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 19:35:18:309][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:35:18:318][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:35:18:326][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:35:26:154][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:35:26:350][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:35:26:365][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 19:35:26:365][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:35:26:378][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:35:26:378][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:35:26:395][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:35:32:117][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:35:32:134][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:35:32:148][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 19:35:32:155][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:35:32:163][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:35:32:179][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:35:32:180][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:38:18:334][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 19:38:25:063][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 19:38:26:410][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 19:38:32:195][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 19:39:51:870][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:39:51:892][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:39:51:903][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 19:39:51:951][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:39:51:965][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 19:39:51:990][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:39:51:990][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:39:52:012][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:39:53:137][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:39:53:171][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:39:53:176][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 19:39:53:190][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:39:53:205][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:39:53:207][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:39:53:207][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:39:53:747][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:39:53:759][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:39:53:771][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 19:39:53:774][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:39:53:782][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:39:53:808][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:39:53:822][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:39:57:943][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 19:39:59:194][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:39:59:213][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:39:59:226][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 19:39:59:226][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:39:59:239][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 19:39:59:263][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:39:59:263][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:39:59:288][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:39:59:745][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:39:59:769][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:39:59:785][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 19:39:59:785][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:39:59:804][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:39:59:809][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:39:59:809][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:40:00:074][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:40:00:086][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:40:00:096][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 19:40:00:103][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:40:00:111][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:40:00:123][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:40:00:126][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:40:18:271][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 19:40:18:284][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 19:40:18:292][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 19:41:27:697][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:41:27:727][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:41:27:750][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 19:41:27:883][DEBUG][org.hibernate.SQL] insert into cart (created_at,product_id,quantity,updated_at,signup_id) values (?,?,?,?,?)
[20250110 19:41:27:988][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:41:27:988][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:41:28:010][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:41:28:014][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:41:28:028][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:41:29:223][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:41:29:245][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:41:29:259][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 19:41:29:273][DEBUG][org.hibernate.SQL] insert into cart (created_at,product_id,quantity,updated_at,signup_id) values (?,?,?,?,?)
[20250110 19:41:29:300][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:41:29:310][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:41:29:315][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:41:29:323][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:41:29:328][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:41:29:339][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:41:29:878][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 19:41:31:761][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:41:31:775][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:41:31:784][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 19:41:31:790][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:41:31:795][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 19:41:31:808][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:41:31:822][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:41:31:822][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:41:31:822][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:41:31:839][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:41:33:552][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:41:33:562][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:41:33:571][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 19:41:33:585][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:41:33:585][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 19:41:33:603][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:41:33:620][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:41:33:620][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:41:33:620][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:41:33:634][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:42:52:020][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 19:42:53:220][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 19:42:53:827][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 19:42:59:293][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 19:42:59:817][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 19:43:00:133][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 19:44:28:035][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 19:44:29:344][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 19:44:31:851][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 19:44:33:641][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 19:44:35:267][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 19:50:35:470][INFO ][com.example.demo.DemoApplication] Starting DemoApplication using Java 17.0.3 with PID 7716 (C:\Users\user\Desktop\demo\build\classes\java\main started by √÷¡¯«ı in C:\Users\user\Desktop\demo)
[20250110 19:50:35:470][INFO ][com.example.demo.DemoApplication] No active profile set, falling back to 1 default profile: "default"
[20250110 19:50:35:731][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[20250110 19:50:35:731][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[20250110 19:50:39:341][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 19:50:39:369][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[20250110 19:50:40:033][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 630 ms. Found 5 JPA repository interfaces.
[20250110 19:50:40:102][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 19:50:40:102][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[20250110 19:50:40:152][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 19:50:40:167][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 19:50:40:169][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.TossPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 19:50:40:172][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 19:50:40:174][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.WebPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 19:50:40:176][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 28 ms. Found 0 Redis repository interfaces.
[20250110 19:50:41:895][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8083 (http)
[20250110 19:50:41:930][INFO ][o.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8083"]
[20250110 19:50:41:939][INFO ][o.apache.catalina.core.StandardService] Starting service [Tomcat]
[20250110 19:50:41:939][INFO ][org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.31]
[20250110 19:50:42:115][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[20250110 19:50:42:115][INFO ][o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 6384 ms
[20250110 19:50:42:467][INFO ][o.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [name: default]
[20250110 19:50:42:756][INFO ][org.hibernate.Version] HHH000412: Hibernate ORM core version 6.5.3.Final
[20250110 19:50:42:958][INFO ][o.h.c.internal.RegionFactoryInitiator] HHH000026: Second-level cache disabled
[20250110 19:50:43:749][INFO ][o.s.o.j.p.SpringPersistenceUnitInfo] No LoadTimeWeaver setup: ignoring JPA class transformer
[20250110 19:50:43:848][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[20250110 19:50:44:565][INFO ][com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4d826338
[20250110 19:50:44:565][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[20250110 19:50:44:794][WARN ][org.hibernate.orm.deprecation] HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[20250110 19:50:44:882][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@23f2f10f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e71378b)
[20250110 19:50:44:932][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@69a76bad) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7340d301)
[20250110 19:50:44:932][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@478e2eef) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@707494fa)
[20250110 19:50:44:948][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@225c735a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57f174cb)
[20250110 19:50:44:948][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@61bed18c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@35395a05)
[20250110 19:50:44:948][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@743e295b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@28b55c3b)
[20250110 19:50:44:948][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3f90ca10) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@40064695)
[20250110 19:50:44:948][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45f7db3f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47a1033e)
[20250110 19:50:44:948][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7e588190) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c985220)
[20250110 19:50:47:610][INFO ][o.h.e.t.j.p.i.JtaPlatformInitiator] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[20250110 19:50:47:846][INFO ][o.s.o.j.LocalContainerEntityManagerFactoryBean] Initialized JPA EntityManagerFactory for persistence unit 'default'
[20250110 19:50:50:192][WARN ][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[20250110 19:50:50:297][INFO ][o.s.b.a.w.s.WelcomePageHandlerMapping] Adding welcome page template: index
[20250110 19:50:51:710][INFO ][o.s.b.d.a.OptionalLiveReloadServer] LiveReload server is running on port 35729
[20250110 19:50:51:749][INFO ][o.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8083"]
[20250110 19:50:51:813][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat started on port 8083 (http) with context path '/'
[20250110 19:50:51:831][INFO ][com.example.demo.DemoApplication] Started DemoApplication in 18.951 seconds (process running for 21.412)
[20250110 19:51:45:110][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[20250110 19:51:45:110][INFO ][o.s.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[20250110 19:51:45:110][INFO ][o.s.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[20250110 19:51:46:654][WARN ][o.a.catalina.util.SessionIdGeneratorBase] Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [157] milliseconds.
[20250110 19:51:46:974][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 19:51:50:692][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:51:50:854][INFO ][com.example.demo.service.UserService] ∑Œ±◊¿Œ √≥∏Æ Ω√∞£ (DB ¡∂»∏ »ƒ Redis ¿˙¿Â): 1163 ms
[20250110 19:51:52:054][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 19:51:52:062][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:51:52:152][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 19:51:52:168][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 19:51:52:170][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:51:52:934][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ Ω«∆–. DBø°º≠ ¡∂»∏ »ƒ ƒ≥Ω√ √≥∏Æ.
[20250110 19:51:52:939][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:51:52:976][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:51:53:025][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:51:53:067][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:51:53:073][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:51:53:075][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:51:53:075][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:51:53:075][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:51:53:113][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:51:59:056][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 19:52:03:484][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:52:03:500][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:52:03:514][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 19:52:03:519][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:52:03:589][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 19:52:03:661][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:52:03:665][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:52:03:669][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:52:03:673][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:52:03:676][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:52:13:132][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:52:13:140][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:52:13:153][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 19:52:13:154][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:52:13:169][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 19:52:13:252][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:52:13:252][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:52:13:252][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:52:13:268][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:52:13:273][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:52:18:288][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:52:18:296][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:52:18:311][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 19:52:18:319][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:52:18:327][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:52:18:338][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:52:18:338][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:52:18:338][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:52:18:353][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:52:23:537][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:52:23:553][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:52:23:561][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 19:52:23:566][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:52:23:573][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:52:23:577][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:52:23:589][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:52:23:592][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:52:23:599][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:53:03:688][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 19:53:13:281][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 19:53:14:367][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 19:53:18:364][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 19:53:23:608][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 19:55:22:937][INFO ][com.example.demo.DemoApplication] Starting DemoApplication using Java 17.0.3 with PID 18060 (C:\Users\user\Desktop\demo\build\classes\java\main started by √÷¡¯«ı in C:\Users\user\Desktop\demo)
[20250110 19:55:22:937][INFO ][com.example.demo.DemoApplication] No active profile set, falling back to 1 default profile: "default"
[20250110 19:55:23:078][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[20250110 19:55:23:078][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[20250110 19:55:26:932][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 19:55:26:947][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[20250110 19:55:27:602][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 617 ms. Found 5 JPA repository interfaces.
[20250110 19:55:27:676][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 19:55:27:676][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[20250110 19:55:27:722][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 19:55:27:722][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 19:55:27:735][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.TossPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 19:55:27:738][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 19:55:27:738][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.WebPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 19:55:27:738][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 32 ms. Found 0 Redis repository interfaces.
[20250110 19:55:29:831][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8083 (http)
[20250110 19:55:29:868][INFO ][o.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8083"]
[20250110 19:55:29:907][INFO ][o.apache.catalina.core.StandardService] Starting service [Tomcat]
[20250110 19:55:29:907][INFO ][org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.31]
[20250110 19:55:30:161][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[20250110 19:55:30:161][INFO ][o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 7067 ms
[20250110 19:55:30:647][INFO ][o.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [name: default]
[20250110 19:55:30:861][INFO ][org.hibernate.Version] HHH000412: Hibernate ORM core version 6.5.3.Final
[20250110 19:55:30:981][INFO ][o.h.c.internal.RegionFactoryInitiator] HHH000026: Second-level cache disabled
[20250110 19:55:31:869][INFO ][o.s.o.j.p.SpringPersistenceUnitInfo] No LoadTimeWeaver setup: ignoring JPA class transformer
[20250110 19:55:32:031][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[20250110 19:55:32:835][INFO ][com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2b2081c
[20250110 19:55:32:851][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[20250110 19:55:33:093][WARN ][org.hibernate.orm.deprecation] HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[20250110 19:55:33:233][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5001c54e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@24b93d63)
[20250110 19:55:33:233][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6dc19225) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4aaea374)
[20250110 19:55:33:248][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14db24da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@79644107)
[20250110 19:55:33:335][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@18d5a4b4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@27df01d9)
[20250110 19:55:33:342][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6a6f0c0c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3158143f)
[20250110 19:55:33:344][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49de6a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b93fe27)
[20250110 19:55:33:347][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@498e8635) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@38868ad7)
[20250110 19:55:33:353][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@53c5e3a5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17e35d3c)
[20250110 19:55:33:353][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2ae1dedb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@263d3962)
[20250110 19:55:36:117][INFO ][o.h.e.t.j.p.i.JtaPlatformInitiator] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[20250110 19:55:36:399][INFO ][o.s.o.j.LocalContainerEntityManagerFactoryBean] Initialized JPA EntityManagerFactory for persistence unit 'default'
[20250110 19:55:38:411][WARN ][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[20250110 19:55:38:587][INFO ][o.s.b.a.w.s.WelcomePageHandlerMapping] Adding welcome page template: index
[20250110 19:55:40:064][INFO ][o.s.b.d.a.OptionalLiveReloadServer] LiveReload server is running on port 35729
[20250110 19:55:40:116][INFO ][o.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8083"]
[20250110 19:55:40:254][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat started on port 8083 (http) with context path '/'
[20250110 19:55:40:279][INFO ][com.example.demo.DemoApplication] Started DemoApplication in 18.82 seconds (process running for 26.356)
[20250110 19:56:05:447][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[20250110 19:56:05:447][INFO ][o.s.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[20250110 19:56:05:507][INFO ][o.s.web.servlet.DispatcherServlet] Completed initialization in 60 ms
[20250110 19:56:06:639][WARN ][o.a.catalina.util.SessionIdGeneratorBase] Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [236] milliseconds.
[20250110 19:56:06:770][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 19:56:09:202][INFO ][com.example.demo.service.UserService] Redisø°º≠ ∑Œ±◊¿Œ √≥∏Æ
[20250110 19:56:09:202][INFO ][com.example.demo.service.UserService] ∑Œ±◊¿Œ √≥∏Æ Ω√∞£ (Redis ªÁøÎ): 942 ms
[20250110 19:56:10:002][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 19:56:10:210][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 19:56:10:233][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 19:56:10:262][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:56:10:262][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:56:11:679][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 19:56:13:817][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:56:13:844][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:56:13:860][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 19:56:13:885][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:56:13:964][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 19:56:14:024][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:56:14:030][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:56:14:047][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:56:14:052][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:56:14:067][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:56:15:082][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:56:15:090][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:56:15:100][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 19:56:15:111][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:56:15:111][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 19:56:15:123][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:56:15:141][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:56:15:146][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:56:15:146][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:56:15:157][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:56:16:199][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:56:16:209][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:56:16:215][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 19:56:16:220][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:56:16:228][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:56:16:228][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:56:16:240][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:56:16:244][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:56:16:245][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:56:17:083][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:56:17:091][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:56:17:099][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 19:56:17:104][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:56:17:112][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 19:56:17:120][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 19:56:17:124][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:56:17:128][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 19:56:17:135][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 19:57:14:096][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 19:57:14:345][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 19:57:15:163][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 19:57:16:252][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 19:57:17:146][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 20:05:21:846][INFO ][com.example.demo.DemoApplication] Starting DemoApplication using Java 17.0.3 with PID 12580 (C:\Users\user\Desktop\demo\build\classes\java\main started by √÷¡¯«ı in C:\Users\user\Desktop\demo)
[20250110 20:05:21:866][INFO ][com.example.demo.DemoApplication] No active profile set, falling back to 1 default profile: "default"
[20250110 20:05:22:219][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[20250110 20:05:22:403][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[20250110 20:05:26:561][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 20:05:26:572][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[20250110 20:05:27:585][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 957 ms. Found 5 JPA repository interfaces.
[20250110 20:05:27:776][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 20:05:27:782][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[20250110 20:05:27:836][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 20:05:27:836][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 20:05:27:849][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.TossPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 20:05:27:855][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 20:05:27:859][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.WebPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 20:05:27:863][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 44 ms. Found 0 Redis repository interfaces.
[20250110 20:05:31:725][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8083 (http)
[20250110 20:05:31:781][INFO ][o.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8083"]
[20250110 20:05:31:798][INFO ][o.apache.catalina.core.StandardService] Starting service [Tomcat]
[20250110 20:05:31:798][INFO ][org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.31]
[20250110 20:05:32:169][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[20250110 20:05:32:169][INFO ][o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 9719 ms
[20250110 20:05:32:981][INFO ][o.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [name: default]
[20250110 20:05:33:270][INFO ][org.hibernate.Version] HHH000412: Hibernate ORM core version 6.5.3.Final
[20250110 20:05:33:410][INFO ][o.h.c.internal.RegionFactoryInitiator] HHH000026: Second-level cache disabled
[20250110 20:05:35:065][INFO ][o.s.o.j.p.SpringPersistenceUnitInfo] No LoadTimeWeaver setup: ignoring JPA class transformer
[20250110 20:05:35:507][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[20250110 20:05:36:906][INFO ][com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@33db441b
[20250110 20:05:36:928][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[20250110 20:05:37:312][WARN ][org.hibernate.orm.deprecation] HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[20250110 20:05:37:573][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5f10c6c2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@38e0db64)
[20250110 20:05:37:575][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61a89ded) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@75a4bf60)
[20250110 20:05:37:577][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c5b51c0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@125e94d4)
[20250110 20:05:37:628][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@373c2487) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@67b3c2bf)
[20250110 20:05:37:682][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@11905ad8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@778e940a)
[20250110 20:05:37:784][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21408e60) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@589f16cd)
[20250110 20:05:37:813][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b4ac19c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@48e7323b)
[20250110 20:05:37:871][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6df186c9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4d78dcc4)
[20250110 20:05:37:882][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50a3a2d6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21a43413)
[20250110 20:05:42:452][INFO ][o.h.e.t.j.p.i.JtaPlatformInitiator] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[20250110 20:05:42:810][INFO ][o.s.o.j.LocalContainerEntityManagerFactoryBean] Initialized JPA EntityManagerFactory for persistence unit 'default'
[20250110 20:05:47:626][WARN ][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[20250110 20:05:47:834][INFO ][o.s.b.a.w.s.WelcomePageHandlerMapping] Adding welcome page template: index
[20250110 20:05:50:191][INFO ][o.s.b.d.a.OptionalLiveReloadServer] LiveReload server is running on port 35729
[20250110 20:05:50:244][INFO ][o.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8083"]
[20250110 20:05:50:390][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat started on port 8083 (http) with context path '/'
[20250110 20:05:50:531][INFO ][com.example.demo.DemoApplication] Started DemoApplication in 31.883 seconds (process running for 35.004)
[20250110 20:08:18:249][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[20250110 20:08:18:276][INFO ][o.s.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[20250110 20:08:18:405][INFO ][o.s.web.servlet.DispatcherServlet] Completed initialization in 126 ms
[20250110 20:08:20:357][WARN ][o.a.catalina.util.SessionIdGeneratorBase] Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [469] milliseconds.
[20250110 20:08:20:502][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 20:08:22:434][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:08:22:639][INFO ][com.example.demo.service.UserService] ∑Œ±◊¿Œ √≥∏Æ Ω√∞£ (DB ¡∂»∏ »ƒ Redis ¿˙¿Â): 990 ms
[20250110 20:08:24:219][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 20:08:24:223][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:08:24:299][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 20:08:24:299][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 20:08:24:320][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:08:25:696][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ Ω«∆–. DBø°º≠ ¡∂»∏ »ƒ ƒ≥Ω√ √≥∏Æ.
[20250110 20:08:25:716][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:08:25:828][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 20:08:25:894][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:08:25:918][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:08:25:939][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:08:25:943][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:08:25:950][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:08:25:956][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 20:08:25:976][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 20:08:29:724][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:08:29:736][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:08:29:747][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 20:08:29:752][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:08:29:891][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 20:08:29:987][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:08:30:002][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 20:08:30:002][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:08:30:013][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:08:30:020][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 20:08:32:376][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:08:32:409][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:08:32:421][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 20:08:32:421][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:08:32:445][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:08:32:446][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 20:08:32:455][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:08:32:460][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:08:32:461][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 20:08:33:356][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:08:33:369][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:08:33:393][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 20:08:33:405][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:08:33:422][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 20:08:33:443][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:08:33:445][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 20:08:33:455][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:08:33:457][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:08:33:457][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 20:08:43:480][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:08:43:498][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:08:43:517][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 20:08:43:529][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:08:43:538][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:08:43:545][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 20:08:43:552][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:08:43:555][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:08:43:555][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 20:08:44:182][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:08:44:195][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:08:44:204][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 20:08:44:206][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:08:44:220][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:08:44:224][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 20:08:44:225][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:08:44:233][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:08:44:237][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250110 20:09:30:033][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 20:09:32:469][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 20:09:33:468][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 20:09:43:564][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 20:09:44:245][INFO ][com.example.demo.service.CartService] DBø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â ¡ﬂ. signupId: jaja2222
[20250110 20:09:56:631][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 20:09:56:631][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 20:09:56:631][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:09:56:663][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 20:09:58:658][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250110 20:43:23:218][INFO ][com.example.demo.DemoApplication] Starting DemoApplication using Java 17.0.3 with PID 17220 (C:\Users\user\Desktop\demo\build\classes\java\main started by √÷¡¯«ı in C:\Users\user\Desktop\demo)
[20250110 20:43:23:226][INFO ][com.example.demo.DemoApplication] No active profile set, falling back to 1 default profile: "default"
[20250110 20:43:23:533][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[20250110 20:43:23:533][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[20250110 20:43:27:639][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 20:43:27:656][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[20250110 20:43:28:107][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 423 ms. Found 5 JPA repository interfaces.
[20250110 20:43:28:158][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250110 20:43:28:158][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[20250110 20:43:28:210][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 20:43:28:210][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 20:43:28:226][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.TossPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 20:43:28:228][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 20:43:28:231][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.WebPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250110 20:43:28:236][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 34 ms. Found 0 Redis repository interfaces.
[20250110 20:43:30:541][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8083 (http)
[20250110 20:43:30:570][INFO ][o.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8083"]
[20250110 20:43:30:582][INFO ][o.apache.catalina.core.StandardService] Starting service [Tomcat]
[20250110 20:43:30:590][INFO ][org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.31]
[20250110 20:43:30:786][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[20250110 20:43:30:802][INFO ][o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 7269 ms
[20250110 20:43:31:236][INFO ][o.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [name: default]
[20250110 20:43:31:419][INFO ][org.hibernate.Version] HHH000412: Hibernate ORM core version 6.5.3.Final
[20250110 20:43:31:508][INFO ][o.h.c.internal.RegionFactoryInitiator] HHH000026: Second-level cache disabled
[20250110 20:43:32:257][INFO ][o.s.o.j.p.SpringPersistenceUnitInfo] No LoadTimeWeaver setup: ignoring JPA class transformer
[20250110 20:43:32:357][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[20250110 20:43:33:207][INFO ][com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@31d119e7
[20250110 20:43:33:224][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[20250110 20:43:33:440][WARN ][org.hibernate.orm.deprecation] HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[20250110 20:43:33:624][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a53f534) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71467eb)
[20250110 20:43:33:626][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4be30e44) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5598adf5)
[20250110 20:43:33:628][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b71827) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@24380ce5)
[20250110 20:43:33:635][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@777aa708) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@679d5b17)
[20250110 20:43:33:709][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5f5301e3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b6861c8)
[20250110 20:43:33:725][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1988d34a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1440768f)
[20250110 20:43:33:734][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@535b21fd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2bc57c7f)
[20250110 20:43:33:765][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7488e8ce) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@63eb1cde)
[20250110 20:43:33:778][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@69b59d97) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6993225a)
[20250110 20:43:36:183][INFO ][o.h.e.t.j.p.i.JtaPlatformInitiator] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[20250110 20:43:36:519][INFO ][o.s.o.j.LocalContainerEntityManagerFactoryBean] Initialized JPA EntityManagerFactory for persistence unit 'default'
[20250110 20:43:38:327][WARN ][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[20250110 20:43:38:390][INFO ][o.s.b.a.w.s.WelcomePageHandlerMapping] Adding welcome page template: index
[20250110 20:43:39:723][INFO ][o.s.b.d.a.OptionalLiveReloadServer] LiveReload server is running on port 35729
[20250110 20:43:39:760][INFO ][o.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8083"]
[20250110 20:43:39:821][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat started on port 8083 (http) with context path '/'
[20250110 20:43:39:840][INFO ][com.example.demo.DemoApplication] Started DemoApplication in 19.637 seconds (process running for 21.476)
[20250110 20:45:12:428][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[20250110 20:45:12:428][INFO ][o.s.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[20250110 20:45:12:443][INFO ][o.s.web.servlet.DispatcherServlet] Completed initialization in 15 ms
[20250110 20:45:13:847][WARN ][o.a.catalina.util.SessionIdGeneratorBase] Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [327] milliseconds.
[20250110 20:45:13:940][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 20:45:29:387][INFO ][com.example.demo.service.UserService] Redisø°º≠ ∑Œ±◊¿Œ √≥∏Æ
[20250110 20:45:29:387][INFO ][com.example.demo.service.UserService] ∑Œ±◊¿Œ √≥∏Æ Ω√∞£ (Redis ªÁøÎ): 762 ms
[20250110 20:45:36:218][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 20:45:36:339][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250110 20:45:36:356][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250110 20:45:36:445][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:45:36:445][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:46:40:936][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:46:40:976][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:46:40:995][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 20:46:41:011][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:46:41:077][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 20:46:41:160][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:46:41:166][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 20:46:41:180][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:46:41:180][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:46:41:193][INFO ][com.example.demo.service.CartService] RedisøÕ DB ¿ÂπŸ±∏¥œ µø±‚»≠ øœ∑·. signupId: jaja2222
[20250110 20:46:43:849][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:46:43:855][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:46:43:864][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 20:46:43:875][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:46:43:875][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 20:46:43:893][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:46:43:893][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 20:46:43:893][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:46:43:910][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:46:43:919][INFO ][com.example.demo.service.CartService] RedisøÕ DB ¿ÂπŸ±∏¥œ µø±‚»≠ øœ∑·. signupId: jaja2222
[20250110 20:46:52:092][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:46:52:098][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:46:52:129][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 20:46:52:132][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:46:52:142][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 20:46:52:166][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:46:52:170][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 20:46:52:178][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:46:52:178][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:46:52:178][INFO ][com.example.demo.service.CartService] RedisøÕ DB ¿ÂπŸ±∏¥œ µø±‚»≠ øœ∑·. signupId: jaja2222
[20250110 20:46:54:226][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:46:54:230][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:46:54:236][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250110 20:46:54:239][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:46:54:245][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250110 20:46:54:257][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250110 20:46:54:272][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250110 20:46:54:272][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:46:54:272][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250110 20:46:54:290][INFO ][com.example.demo.service.CartService] RedisøÕ DB ¿ÂπŸ±∏¥œ µø±‚»≠ øœ∑·. signupId: jaja2222
