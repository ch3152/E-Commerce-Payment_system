[20250112 19:00:48:861][INFO ][com.example.demo.DemoApplication] Starting DemoApplication using Java 17.0.3 with PID 10632 (C:\Users\user\Desktop\demo\build\classes\java\main started by √÷¡¯«ı in C:\Users\user\Desktop\demo)
[20250112 19:00:48:875][INFO ][com.example.demo.DemoApplication] No active profile set, falling back to 1 default profile: "default"
[20250112 19:00:49:074][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[20250112 19:00:49:075][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[20250112 19:00:52:864][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250112 19:00:52:880][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[20250112 19:00:53:709][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 803 ms. Found 5 JPA repository interfaces.
[20250112 19:00:53:840][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode
[20250112 19:00:53:853][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[20250112 19:00:53:936][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250112 19:00:53:938][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250112 19:00:53:941][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.TossPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250112 19:00:53:946][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250112 19:00:53:950][INFO ][o.s.d.r.c.RepositoryConfigurationExtensionSupport] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.demo.repository.WebPaymentInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[20250112 19:00:53:953][INFO ][o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 40 ms. Found 0 Redis repository interfaces.
[20250112 19:00:56:658][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8083 (http)
[20250112 19:00:56:689][INFO ][o.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8083"]
[20250112 19:00:56:701][INFO ][o.apache.catalina.core.StandardService] Starting service [Tomcat]
[20250112 19:00:56:701][INFO ][org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.31]
[20250112 19:00:56:957][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[20250112 19:00:56:959][INFO ][o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 7881 ms
[20250112 19:00:57:532][INFO ][o.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [name: default]
[20250112 19:00:57:756][INFO ][org.hibernate.Version] HHH000412: Hibernate ORM core version 6.5.3.Final
[20250112 19:00:57:888][INFO ][o.h.c.internal.RegionFactoryInitiator] HHH000026: Second-level cache disabled
[20250112 19:00:59:383][INFO ][o.s.o.j.p.SpringPersistenceUnitInfo] No LoadTimeWeaver setup: ignoring JPA class transformer
[20250112 19:00:59:554][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[20250112 19:01:00:464][INFO ][com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7b7b443f
[20250112 19:01:00:464][INFO ][com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[20250112 19:01:00:753][WARN ][org.hibernate.orm.deprecation] HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[20250112 19:01:00:896][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61d89341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@24c4e3c8)
[20250112 19:01:00:896][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@543594f8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7dbb20d9)
[20250112 19:01:00:896][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@585ce6b4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5b8594d4)
[20250112 19:01:00:896][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@23ef5908) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7761844)
[20250112 19:01:00:909][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@38a02758) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ff437ac)
[20250112 19:01:00:958][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@160a0043) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21899efe)
[20250112 19:01:01:008][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@182af770) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@768dfa8e)
[20250112 19:01:01:211][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3043e404) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dd0e29c)
[20250112 19:01:01:394][DEBUG][o.h.t.descriptor.sql.spi.DdlTypeRegistry] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@128e0f21) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bcece74)
[20250112 19:01:04:661][INFO ][o.h.e.t.j.p.i.JtaPlatformInitiator] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[20250112 19:01:04:961][INFO ][o.s.o.j.LocalContainerEntityManagerFactoryBean] Initialized JPA EntityManagerFactory for persistence unit 'default'
[20250112 19:01:07:322][WARN ][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[20250112 19:01:07:415][INFO ][o.s.b.a.w.s.WelcomePageHandlerMapping] Adding welcome page template: index
[20250112 19:01:08:427][INFO ][o.s.b.d.a.OptionalLiveReloadServer] LiveReload server is running on port 35729
[20250112 19:01:08:461][INFO ][o.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8083"]
[20250112 19:01:08:513][INFO ][o.s.b.w.embedded.tomcat.TomcatWebServer] Tomcat started on port 8083 (http) with context path '/'
[20250112 19:01:08:529][INFO ][com.example.demo.DemoApplication] Started DemoApplication in 21.214 seconds (process running for 30.063)
[20250112 19:01:27:285][INFO ][o.a.c.c.C.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[20250112 19:01:27:293][INFO ][o.s.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[20250112 19:01:27:343][INFO ][o.s.web.servlet.DispatcherServlet] Completed initialization in 44 ms
[20250112 19:01:29:840][WARN ][o.a.catalina.util.SessionIdGeneratorBase] Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [926] milliseconds.
[20250112 19:01:30:229][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250112 19:01:33:782][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250112 19:01:34:061][INFO ][com.example.demo.service.UserService] ∑Œ±◊¿Œ √≥∏Æ Ω√∞£ (DB ¡∂»∏ »ƒ Redis ¿˙¿Â): 1800 ms
[20250112 19:01:34:853][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250112 19:01:34:858][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250112 19:01:34:973][INFO ][com.example.demo.service.UserService] Redisø°º≠ ƒ≥Ω√µ» ªÁøÎ¿⁄ ∑Œ±◊¿Œ √≥∏Æ
[20250112 19:01:34:979][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0
[20250112 19:01:34:998][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250112 19:01:36:159][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ Ω«∆–. DBø°º≠ ¡∂»∏ »ƒ ƒ≥Ω√ √≥∏Æ.
[20250112 19:01:36:175][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250112 19:01:36:247][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250112 19:01:36:457][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250112 19:01:36:858][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250112 19:01:36:882][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250112 19:01:36:892][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250112 19:01:36:911][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250112 19:01:36:919][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250112 19:01:36:936][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250112 19:01:38:569][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250112 19:01:38:580][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250112 19:01:38:591][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=? and c1_0.product_id=?
[20250112 19:01:38:595][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250112 19:01:38:694][DEBUG][org.hibernate.SQL] update cart set product_id=?,quantity=?,updated_at=?,signup_id=? where id=?
[20250112 19:01:38:753][DEBUG][org.hibernate.SQL] select u1_0.id,u1_0.created_at,u1_0.name,u1_0.phone,u1_0.signup_id,u1_0.signup_password,u1_0.updated_at from user u1_0 where u1_0.signup_id=?
[20250112 19:01:38:759][DEBUG][org.hibernate.SQL] select c1_0.id,c1_0.created_at,c1_0.product_id,c1_0.quantity,c1_0.updated_at,c1_0.signup_id from cart c1_0 where c1_0.signup_id=?
[20250112 19:01:38:763][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250112 19:01:38:767][DEBUG][org.hibernate.SQL] select p1_0.id,p1_0.category,p1_0.country,p1_0.manufacturer,p1_0.name,p1_0.price,p1_0.quantity from product p1_0 where p1_0.id=?
[20250112 19:01:38:772][INFO ][com.example.demo.service.CartService] Redisø° ¿ÂπŸ±∏¥œ ¡§∫∏ ¿˙¿Â øœ∑·. redisKey: cart:jaja2222
[20250112 19:01:39:876][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250112 19:02:24:433][INFO ][com.example.demo.service.CartService] Redisø°º≠ ¿ÂπŸ±∏¥œ ¡§∫∏ ¡∂»∏ º∫∞¯.
[20250112 20:57:58:618][INFO ][com.example.demo.DemoApplication] Starting DemoApplication using Java 17.0.3 with PID 7608 (C:\Users\user\Desktop\demo\build\classes\java\main started by √÷¡¯«ı in C:\Users\user\Desktop\demo)
[20250112 20:57:59:037][INFO ][com.example.demo.DemoApplication] No active profile set, falling back to 1 default profile: "default"
[20250112 20:57:59:523][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[20250112 20:57:59:592][INFO ][o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
